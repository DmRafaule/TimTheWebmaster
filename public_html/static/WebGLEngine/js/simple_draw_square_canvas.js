function CreateRectangle(e,t,n,s,o){var i=t,a=t+s,r=n,c=n+o;e.bufferData(e.ARRAY_BUFFER,new Float32Array([i,r,a,r,i,c,i,c,a,r,a,c]),e.STATIC_DRAW)}function createShader(e,t,n){var o,s=e.createShader(t);if(e.shaderSource(s,n),e.compileShader(s),o=e.getShaderParameter(s,e.COMPILE_STATUS),o)return s;console.log(e.getShaderInfoLog(s)),e.deleteShader(s)}function readTextFile(e){var t=new XMLHttpRequest,n="";return t.open("GET",e,!1),t.onreadystatechange=function(){t.readyState===4&&(t.status===200||t.status==0)&&(n=t.responseText)},t.send(null),n}function createProgram(e,t,n){var o,s=e.createProgram();if(e.attachShader(s,t),e.attachShader(s,n),e.linkProgram(s),o=e.getProgramParameter(s,e.LINK_STATUS),o)return s;console.log(e.getProgramInfoLog(s)),e.deleteProgram(s)}var canvas=document.querySelector("#canvas"),vertexShaderPath,fragmentShaderPath,vertexShaderSource,fragmentShaderSource,vertexShader,fragmentShader,program,positionAttributeLocation,resolutionUniformLocation,colorUniformLocation,positionBuffer,size,type,normalize,stride,offset,primitiveType,count,gl=canvas.getContext("webgl");gl||console.log("OpenGl is not avaiable"),vertexShaderPath=canvas.dataset.vertexShader,fragmentShaderPath=canvas.dataset.fragmentShader,vertexShaderSource=readTextFile(vertexShaderPath),fragmentShaderSource=readTextFile(fragmentShaderPath),vertexShader=createShader(gl,gl.VERTEX_SHADER,vertexShaderSource),fragmentShader=createShader(gl,gl.FRAGMENT_SHADER,fragmentShaderSource),program=createProgram(gl,vertexShader,fragmentShader),positionAttributeLocation=gl.getAttribLocation(program,"a_position"),resolutionUniformLocation=gl.getUniformLocation(program,"u_resolution"),colorUniformLocation=gl.getUniformLocation(program,"u_color"),positionBuffer=gl.createBuffer(),gl.bindBuffer(gl.ARRAY_BUFFER,positionBuffer),CreateRectangle(gl,100,100,200,50),gl.viewport(0,0,gl.canvas.width,gl.canvas.height),gl.clearColor(0,0,0,0),gl.clear(gl.COLOR_BUFFER_BIT),gl.useProgram(program),gl.enableVertexAttribArray(positionAttributeLocation),gl.uniform2f(resolutionUniformLocation,gl.canvas.width,gl.canvas.height),gl.uniform4f(colorUniformLocation,Math.random(),Math.random(),Math.random(),Math.random()),gl.bindBuffer(gl.ARRAY_BUFFER,positionBuffer),size=2,type=gl.FLOAT,normalize=!1,stride=0,offset=0,gl.vertexAttribPointer(positionAttributeLocation,size,type,normalize,stride,offset),primitiveType=gl.TRIANGLES,offset=0,count=6,gl.drawArrays(primitiveType,offset,count)