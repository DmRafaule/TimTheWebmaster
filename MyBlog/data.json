[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-12-20T15:19:54.878Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "Articles", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-12-20T15:23:03.882Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "News", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-12-20T15:28:44.011Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "Cases", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-12-20T15:32:18.590Z", "user": 1, "content_type": 9, "object_id": "4", "object_repr": "Q&A", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-12-20T15:34:12.035Z", "user": 1, "content_type": 9, "object_id": "5", "object_repr": "T&D", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-12-20T15:36:07.761Z", "user": 1, "content_type": 9, "object_id": "6", "object_repr": "Tools", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-12-20T15:38:25.355Z", "user": 1, "content_type": 9, "object_id": "7", "object_repr": "Services", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-12-20T16:53:51.832Z", "user": 1, "content_type": 11, "object_id": "1", "object_repr": "comments", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-12-20T16:53:58.766Z", "user": 1, "content_type": 11, "object_id": "2", "object_repr": "website", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-12-20T16:54:03.796Z", "user": 1, "content_type": 11, "object_id": "3", "object_repr": "django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-12-20T16:54:09.064Z", "user": 1, "content_type": 12, "object_id": "1", "object_repr": "Commenting system for a website, using the Django framework", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-12-20T16:55:27.897Z", "user": 1, "content_type": 11, "object_id": "4", "object_repr": "auth", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-12-20T16:57:37.806Z", "user": 1, "content_type": 11, "object_id": "5", "object_repr": "backend", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-12-20T16:57:44.348Z", "user": 1, "content_type": 12, "object_id": "2", "object_repr": "Implementation of authentication system on django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-12-20T16:59:59.234Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-12-20T17:01:05.596Z", "user": 1, "content_type": 11, "object_id": "6", "object_repr": "bot", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-12-20T17:01:12.224Z", "user": 1, "content_type": 11, "object_id": "7", "object_repr": "telegram", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-12-20T17:01:18.067Z", "user": 1, "content_type": 11, "object_id": "8", "object_repr": "aiogram", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-12-20T17:01:54.655Z", "user": 1, "content_type": 12, "object_id": "4", "object_repr": "Quizbot, or questionnaire bot for Telegram. Using python, aiogram.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2023-12-20T17:05:32.074Z", "user": 1, "content_type": 12, "object_id": "4", "object_repr": "Quizbot, or questionnaire bot for Telegram. Using python, aiogram.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2023-12-20T17:05:32.079Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2023-12-20T17:05:32.082Z", "user": 1, "content_type": 12, "object_id": "2", "object_repr": "Implementation of authentication system on django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2023-12-20T17:05:32.086Z", "user": 1, "content_type": 12, "object_id": "1", "object_repr": "Commenting system for a website, using the Django framework", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2023-12-20T17:09:10.555Z", "user": 1, "content_type": 8, "object_id": "1", "object_repr": "Downloadable object (1)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2023-12-20T17:09:36.641Z", "user": 1, "content_type": 8, "object_id": "2", "object_repr": "Downloadable object (2)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2023-12-20T17:09:53.667Z", "user": 1, "content_type": 8, "object_id": "3", "object_repr": "Downloadable object (3)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2023-12-20T17:16:23.127Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Image object (1)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2023-12-20T17:18:15.303Z", "user": 1, "content_type": 7, "object_id": "1", "object_repr": "Image object (1)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Text [ru]\", \"Text [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2023-12-20T17:21:48.980Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "Image object (2)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2023-12-20T17:23:07.521Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "Image object (3)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2023-12-20T17:23:53.727Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "Image object (4)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2023-12-20T17:24:38.793Z", "user": 1, "content_type": 7, "object_id": "5", "object_repr": "Image object (5)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2023-12-20T17:25:26.570Z", "user": 1, "content_type": 7, "object_id": "6", "object_repr": "Image object (6)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2023-12-20T17:26:27.808Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "Image object (7)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2023-12-20T17:27:24.526Z", "user": 1, "content_type": 7, "object_id": "8", "object_repr": "Image object (8)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2023-12-20T17:28:22.312Z", "user": 1, "content_type": 7, "object_id": "9", "object_repr": "Image object (9)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2023-12-20T17:29:19.770Z", "user": 1, "content_type": 7, "object_id": "10", "object_repr": "Image object (10)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 38, "fields": {"action_time": "2023-12-20T17:30:03.382Z", "user": 1, "content_type": 7, "object_id": "11", "object_repr": "Image object (11)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 39, "fields": {"action_time": "2023-12-20T17:40:19.215Z", "user": 1, "content_type": 11, "object_id": "9", "object_repr": "begining", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 40, "fields": {"action_time": "2023-12-20T17:41:36.824Z", "user": 1, "content_type": 11, "object_id": "10", "object_repr": "блог", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 41, "fields": {"action_time": "2023-12-20T17:58:54.549Z", "user": 1, "content_type": 14, "object_id": "5", "object_repr": "I’ve published my blog or why is it so empty.", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 42, "fields": {"action_time": "2023-12-20T18:00:08.473Z", "user": 1, "content_type": 11, "object_id": "11", "object_repr": "design", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 43, "fields": {"action_time": "2023-12-20T18:25:23.081Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 44, "fields": {"action_time": "2023-12-20T18:26:24.797Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 45, "fields": {"action_time": "2023-12-20T18:26:24.802Z", "user": 1, "content_type": 14, "object_id": "5", "object_repr": "I’ve published my blog or why is it so empty.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 46, "fields": {"action_time": "2023-12-20T18:32:01.116Z", "user": 1, "content_type": 7, "object_id": "12", "object_repr": "Image object (12)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 47, "fields": {"action_time": "2023-12-20T18:32:39.039Z", "user": 1, "content_type": 7, "object_id": "13", "object_repr": "Image object (13)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 48, "fields": {"action_time": "2023-12-20T18:33:34.715Z", "user": 1, "content_type": 7, "object_id": "14", "object_repr": "Image object (14)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 49, "fields": {"action_time": "2023-12-20T18:34:05.871Z", "user": 1, "content_type": 7, "object_id": "15", "object_repr": "Image object (15)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 50, "fields": {"action_time": "2023-12-20T18:34:53.262Z", "user": 1, "content_type": 7, "object_id": "16", "object_repr": "Image object (16)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 51, "fields": {"action_time": "2023-12-20T18:37:52.638Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 52, "fields": {"action_time": "2023-12-20T18:39:11.803Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 53, "fields": {"action_time": "2023-12-20T18:40:13.564Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 54, "fields": {"action_time": "2023-12-20T18:40:51.462Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 55, "fields": {"action_time": "2023-12-20T18:41:39.252Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 56, "fields": {"action_time": "2023-12-20T18:43:06.973Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 57, "fields": {"action_time": "2023-12-20T18:44:10.611Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 58, "fields": {"action_time": "2023-12-20T18:47:23.229Z", "user": 1, "content_type": 7, "object_id": "15", "object_repr": "Image object (15)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 59, "fields": {"action_time": "2023-12-20T18:49:04.810Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 60, "fields": {"action_time": "2023-12-20T18:51:27.869Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 61, "fields": {"action_time": "2023-12-20T18:52:19.139Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 62, "fields": {"action_time": "2023-12-20T18:52:50.733Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 63, "fields": {"action_time": "2023-12-20T18:58:04.763Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 64, "fields": {"action_time": "2023-12-20T19:03:12.234Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 65, "fields": {"action_time": "2023-12-21T12:58:43.756Z", "user": 1, "content_type": 14, "object_id": "5", "object_repr": "I’ve published my blog or why is it so empty.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Lead [ru]\", \"Lead [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 66, "fields": {"action_time": "2023-12-21T13:00:06.611Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Lead [ru]\", \"Lead [en]\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 67, "fields": {"action_time": "2023-12-21T13:05:10.709Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 68, "fields": {"action_time": "2023-12-21T13:06:33.295Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 69, "fields": {"action_time": "2023-12-21T13:10:02.793Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 70, "fields": {"action_time": "2023-12-21T13:15:16.941Z", "user": 1, "content_type": 11, "object_id": "12", "object_repr": "ux/ui", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 71, "fields": {"action_time": "2023-12-21T14:19:13.432Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 72, "fields": {"action_time": "2023-12-21T14:21:03.571Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\", \"Body [en]\", \"Ending [ru]\", \"Ending [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 73, "fields": {"action_time": "2023-12-21T14:22:53.990Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 74, "fields": {"action_time": "2023-12-21T14:24:32.796Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 75, "fields": {"action_time": "2023-12-21T14:25:09.598Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 76, "fields": {"action_time": "2023-12-21T14:36:03.348Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Body [ru]\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 77, "fields": {"action_time": "2023-12-21T14:44:49.958Z", "user": 1, "content_type": 7, "object_id": "17", "object_repr": "Image object (17)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 78, "fields": {"action_time": "2023-12-21T14:45:07.127Z", "user": 1, "content_type": 7, "object_id": "18", "object_repr": "Image object (18)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 79, "fields": {"action_time": "2023-12-21T14:45:14.628Z", "user": 1, "content_type": 7, "object_id": "19", "object_repr": "Image object (19)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 80, "fields": {"action_time": "2023-12-21T14:45:26.757Z", "user": 1, "content_type": 7, "object_id": "20", "object_repr": "Image object (20)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 81, "fields": {"action_time": "2023-12-21T14:45:33.688Z", "user": 1, "content_type": 7, "object_id": "21", "object_repr": "Image object (21)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 82, "fields": {"action_time": "2023-12-21T14:45:40.123Z", "user": 1, "content_type": 7, "object_id": "22", "object_repr": "Image object (22)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 83, "fields": {"action_time": "2023-12-21T14:45:47.946Z", "user": 1, "content_type": 7, "object_id": "23", "object_repr": "Image object (23)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 84, "fields": {"action_time": "2023-12-21T16:17:40.882Z", "user": 1, "content_type": 11, "object_id": "10", "object_repr": "блог", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 85, "fields": {"action_time": "2023-12-21T17:44:47.469Z", "user": 1, "content_type": 11, "object_id": "13", "object_repr": "ajax", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 86, "fields": {"action_time": "2023-12-21T17:46:22.545Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug\"]}}]"}}, {"model": "admin.logentry", "pk": 87, "fields": {"action_time": "2023-12-21T17:46:46.928Z", "user": 1, "content_type": 13, "object_id": "8", "object_repr": "How I implemented login and registration forms using Django", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 88, "fields": {"action_time": "2023-12-21T17:48:47.689Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug\"]}}]"}}, {"model": "admin.logentry", "pk": 89, "fields": {"action_time": "2023-12-21T18:49:56.773Z", "user": 1, "content_type": 11, "object_id": "14", "object_repr": "js", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 90, "fields": {"action_time": "2023-12-21T18:50:04.377Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Two types of commenting system in one", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 91, "fields": {"action_time": "2023-12-21T18:54:12.675Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Two types of commenting system in one", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Goals [ru]\", \"Goals [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 92, "fields": {"action_time": "2023-12-21T19:02:33.555Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Two types of commenting system in one", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Solution [ru]\", \"Solution [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 93, "fields": {"action_time": "2023-12-21T19:02:50.990Z", "user": 1, "content_type": 7, "object_id": "24", "object_repr": "Image object (24)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 94, "fields": {"action_time": "2023-12-21T19:03:00.476Z", "user": 1, "content_type": 7, "object_id": "25", "object_repr": "Image object (25)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 95, "fields": {"action_time": "2023-12-21T19:04:09.692Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Two types of commenting system in one", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Solution [ru]\", \"Solution [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 96, "fields": {"action_time": "2023-12-22T13:56:11.314Z", "user": 1, "content_type": 12, "object_id": "4", "object_repr": "Quizbot, or questionnaire bot for Telegram. Using python, aiogram.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Slug\"]}}]"}}, {"model": "admin.logentry", "pk": 97, "fields": {"action_time": "2023-12-22T15:17:09.987Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 98, "fields": {"action_time": "2023-12-22T15:31:12.068Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resume [ru]\", \"Resume [en]\", \"Goals [ru]\", \"Goals [en]\", \"Solution [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 99, "fields": {"action_time": "2023-12-22T15:40:28.071Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Solution [ru]\", \"Solution [en]\", \"Result [ru]\", \"Result [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 100, "fields": {"action_time": "2023-12-22T15:41:29.769Z", "user": 1, "content_type": 7, "object_id": "26", "object_repr": "Image object (26)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 101, "fields": {"action_time": "2023-12-22T15:41:37.970Z", "user": 1, "content_type": 7, "object_id": "27", "object_repr": "Image object (27)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 102, "fields": {"action_time": "2023-12-22T15:41:47.550Z", "user": 1, "content_type": 7, "object_id": "28", "object_repr": "Image object (28)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 103, "fields": {"action_time": "2023-12-22T15:44:49.534Z", "user": 1, "content_type": 11, "object_id": "15", "object_repr": "parser", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 104, "fields": {"action_time": "2023-12-22T15:45:01.525Z", "user": 1, "content_type": 11, "object_id": "16", "object_repr": "images", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 105, "fields": {"action_time": "2023-12-22T15:45:20.834Z", "user": 1, "content_type": 11, "object_id": "17", "object_repr": "python_script", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 106, "fields": {"action_time": "2023-12-22T15:45:27.810Z", "user": 1, "content_type": 11, "object_id": "18", "object_repr": "django_app", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 107, "fields": {"action_time": "2023-12-22T15:53:21.627Z", "user": 1, "content_type": 18, "object_id": "11", "object_repr": "", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 108, "fields": {"action_time": "2023-12-22T15:56:40.830Z", "user": 1, "content_type": 18, "object_id": "11", "object_repr": "ImageThief", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Name [ru]\"]}}]"}}, {"model": "admin.logentry", "pk": 109, "fields": {"action_time": "2023-12-22T16:01:52.721Z", "user": 1, "content_type": 8, "object_id": "4", "object_repr": "Downloadable object (4)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 110, "fields": {"action_time": "2023-12-22T17:59:02.240Z", "user": 1, "content_type": 11, "object_id": "19", "object_repr": "gamedev", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 111, "fields": {"action_time": "2023-12-22T17:59:13.679Z", "user": 1, "content_type": 11, "object_id": "20", "object_repr": "game engine", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 112, "fields": {"action_time": "2023-12-22T17:59:22.956Z", "user": 1, "content_type": 15, "object_id": "12", "object_repr": "What did you do before becoming a webmaster?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 113, "fields": {"action_time": "2023-12-22T18:03:02.205Z", "user": 1, "content_type": 15, "object_id": "13", "object_repr": "Why did you choose aiogram to create bots?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 114, "fields": {"action_time": "2023-12-22T18:03:50.050Z", "user": 1, "content_type": 15, "object_id": "12", "object_repr": "What did you do before becoming a webmaster?", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Answer [ru]\", \"Answer [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 115, "fields": {"action_time": "2023-12-22T18:04:05.498Z", "user": 1, "content_type": 15, "object_id": "13", "object_repr": "Why did you choose aiogram to create bots?", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Answer [ru]\", \"Answer [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 116, "fields": {"action_time": "2023-12-22T18:11:22.755Z", "user": 1, "content_type": 11, "object_id": "21", "object_repr": "backstory", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 117, "fields": {"action_time": "2023-12-22T18:11:57.858Z", "user": 1, "content_type": 15, "object_id": "14", "object_repr": "Why did you choose django over website builders ?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 118, "fields": {"action_time": "2023-12-22T18:15:51.833Z", "user": 1, "content_type": 11, "object_id": "22", "object_repr": "drawing", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 119, "fields": {"action_time": "2023-12-22T18:16:04.458Z", "user": 1, "content_type": 11, "object_id": "23", "object_repr": "me", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 120, "fields": {"action_time": "2023-12-22T18:16:15.921Z", "user": 1, "content_type": 15, "object_id": "15", "object_repr": "Who draws all the graphics for the site?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 121, "fields": {"action_time": "2023-12-22T18:18:38.932Z", "user": 1, "content_type": 15, "object_id": "16", "object_repr": "What hosting provider do you use?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 122, "fields": {"action_time": "2023-12-22T18:24:19.568Z", "user": 1, "content_type": 11, "object_id": "24", "object_repr": "seo", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 123, "fields": {"action_time": "2023-12-22T18:24:34.601Z", "user": 1, "content_type": 15, "object_id": "17", "object_repr": "Do you offer SEO services?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 124, "fields": {"action_time": "2023-12-22T18:29:37.952Z", "user": 1, "content_type": 15, "object_id": "18", "object_repr": "Why did you quit  game development ?", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 125, "fields": {"action_time": "2023-12-22T18:30:16.302Z", "user": 1, "content_type": 15, "object_id": "15", "object_repr": "Who draws all the graphics for the site?", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Answer [ru]\", \"Answer [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 126, "fields": {"action_time": "2023-12-22T18:30:31.537Z", "user": 1, "content_type": 15, "object_id": "16", "object_repr": "What hosting provider do you use?", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Answer [ru]\", \"Answer [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 127, "fields": {"action_time": "2023-12-22T18:31:27.257Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 128, "fields": {"action_time": "2023-12-22T18:31:27.264Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Two types of commenting system in one", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 129, "fields": {"action_time": "2023-12-22T18:31:27.270Z", "user": 1, "content_type": 13, "object_id": "8", "object_repr": "How I implemented login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 130, "fields": {"action_time": "2023-12-22T18:32:16.947Z", "user": 1, "content_type": 18, "object_id": "11", "object_repr": "ImageThief", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"TimeCreated\"]}}]"}}, {"model": "admin.logentry", "pk": 131, "fields": {"action_time": "2023-12-22T18:41:12.434Z", "user": 1, "content_type": 11, "object_id": "25", "object_repr": "telegram", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 132, "fields": {"action_time": "2023-12-22T18:41:17.318Z", "user": 1, "content_type": 17, "object_id": "19", "object_repr": "Telegram bot", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 133, "fields": {"action_time": "2023-12-22T18:47:07.271Z", "user": 1, "content_type": 17, "object_id": "20", "object_repr": "aiogram", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 134, "fields": {"action_time": "2023-12-22T18:55:24.302Z", "user": 1, "content_type": 11, "object_id": "26", "object_repr": "server", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 135, "fields": {"action_time": "2023-12-22T18:55:28.470Z", "user": 1, "content_type": 17, "object_id": "21", "object_repr": "VPS (Virtula private server)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 136, "fields": {"action_time": "2023-12-23T12:44:44.302Z", "user": 1, "content_type": 17, "object_id": "22", "object_repr": "Pagination", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 137, "fields": {"action_time": "2023-12-23T12:50:12.389Z", "user": 1, "content_type": 11, "object_id": "27", "object_repr": "website builder", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 138, "fields": {"action_time": "2023-12-23T12:50:23.393Z", "user": 1, "content_type": 17, "object_id": "23", "object_repr": "Website builder", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 139, "fields": {"action_time": "2023-12-23T12:54:38.754Z", "user": 1, "content_type": 11, "object_id": "28", "object_repr": "django template", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 140, "fields": {"action_time": "2023-12-23T12:54:42.666Z", "user": 1, "content_type": 17, "object_id": "24", "object_repr": "Django template", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 141, "fields": {"action_time": "2023-12-23T12:59:50.454Z", "user": 1, "content_type": 17, "object_id": "25", "object_repr": "Comment", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 142, "fields": {"action_time": "2023-12-23T13:01:11.938Z", "user": 1, "content_type": 11, "object_id": "29", "object_repr": "django model", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 143, "fields": {"action_time": "2023-12-23T13:05:28.517Z", "user": 1, "content_type": 17, "object_id": "26", "object_repr": "Django model", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 144, "fields": {"action_time": "2023-12-23T13:11:58.441Z", "user": 1, "content_type": 17, "object_id": "27", "object_repr": "Authentication", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 145, "fields": {"action_time": "2023-12-23T13:15:19.108Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resume [ru]\", \"Resume [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 146, "fields": {"action_time": "2023-12-23T13:15:43.794Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Resume [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 147, "fields": {"action_time": "2023-12-23T13:18:57.131Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Viewed\", \"Resume [ru]\", \"Resume [en]\", \"Goals [ru]\", \"Goals [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 148, "fields": {"action_time": "2023-12-23T13:20:06.442Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resume [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 149, "fields": {"action_time": "2023-12-23T13:25:24.347Z", "user": 1, "content_type": 13, "object_id": "9", "object_repr": "Two types of commenting system in one", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Goals [ru]\", \"Goals [en]\", \"Solution [ru]\", \"Solution [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 150, "fields": {"action_time": "2023-12-23T13:27:18.312Z", "user": 1, "content_type": 13, "object_id": "8", "object_repr": "How I implemented login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Resume [ru]\", \"Resume [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 151, "fields": {"action_time": "2023-12-23T13:30:19.471Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 152, "fields": {"action_time": "2023-12-23T13:33:13.125Z", "user": 1, "content_type": 14, "object_id": "5", "object_repr": "I’ve published my blog or why is it so empty.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Body [ru]\", \"Body [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 153, "fields": {"action_time": "2023-12-23T15:27:48.229Z", "user": 1, "content_type": 18, "object_id": "11", "object_repr": "ImageThief", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Icon\"]}}]"}}, {"model": "admin.logentry", "pk": 154, "fields": {"action_time": "2023-12-23T15:45:30.965Z", "user": 1, "content_type": 7, "object_id": "29", "object_repr": "Image object (29)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 155, "fields": {"action_time": "2023-12-24T04:36:00.975Z", "user": 1, "content_type": 12, "object_id": "4", "object_repr": "Quizbot, or questionnaire bot for Telegram. Using python, aiogram.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 156, "fields": {"action_time": "2023-12-24T14:15:22.022Z", "user": 1, "content_type": 12, "object_id": "1", "object_repr": "Commenting system for a website, using the Django framework", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 157, "fields": {"action_time": "2023-12-24T15:30:17.045Z", "user": 1, "content_type": 12, "object_id": "2", "object_repr": "Implementation of authentication system on django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 158, "fields": {"action_time": "2023-12-24T16:39:40.569Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 159, "fields": {"action_time": "2023-12-24T18:12:49.309Z", "user": 1, "content_type": 12, "object_id": "4", "object_repr": "Quizbot, or questionnaire bot for Telegram. Using python, aiogram.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Template [ru]\", \"Template [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 160, "fields": {"action_time": "2023-12-24T18:15:31.271Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Template [ru]\", \"Template [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 161, "fields": {"action_time": "2023-12-24T18:18:32.345Z", "user": 1, "content_type": 12, "object_id": "3", "object_repr": "Make login and registration forms using Django", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\", \"Template [ru]\", \"Template [en]\"]}}]"}}, {"model": "admin.logentry", "pk": 162, "fields": {"action_time": "2023-12-24T18:26:15.808Z", "user": 1, "content_type": 7, "object_id": "3", "object_repr": "Image object (3)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 163, "fields": {"action_time": "2023-12-24T18:26:32.311Z", "user": 1, "content_type": 7, "object_id": "4", "object_repr": "Image object (4)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 164, "fields": {"action_time": "2023-12-24T18:27:55.695Z", "user": 1, "content_type": 7, "object_id": "11", "object_repr": "Image object (11)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 165, "fields": {"action_time": "2023-12-24T18:27:55.699Z", "user": 1, "content_type": 7, "object_id": "10", "object_repr": "Image object (10)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 166, "fields": {"action_time": "2023-12-24T18:27:55.703Z", "user": 1, "content_type": 7, "object_id": "9", "object_repr": "Image object (9)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 167, "fields": {"action_time": "2023-12-24T18:27:55.707Z", "user": 1, "content_type": 7, "object_id": "8", "object_repr": "Image object (8)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 168, "fields": {"action_time": "2023-12-24T18:27:55.711Z", "user": 1, "content_type": 7, "object_id": "7", "object_repr": "Image object (7)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 169, "fields": {"action_time": "2023-12-24T18:27:55.714Z", "user": 1, "content_type": 7, "object_id": "6", "object_repr": "Image object (6)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 170, "fields": {"action_time": "2023-12-24T18:27:55.718Z", "user": 1, "content_type": 7, "object_id": "5", "object_repr": "Image object (5)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 171, "fields": {"action_time": "2023-12-24T18:27:55.722Z", "user": 1, "content_type": 7, "object_id": "2", "object_repr": "Image object (2)", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"File\"]}}]"}}, {"model": "admin.logentry", "pk": 172, "fields": {"action_time": "2023-12-25T05:42:07.292Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 173, "fields": {"action_time": "2023-12-25T05:51:36.095Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 174, "fields": {"action_time": "2023-12-25T05:52:28.925Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 175, "fields": {"action_time": "2023-12-25T05:53:18.557Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 176, "fields": {"action_time": "2023-12-25T05:58:49.866Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "New improved design of website", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 177, "fields": {"action_time": "2023-12-25T06:50:43.455Z", "user": 1, "content_type": 14, "object_id": "7", "object_repr": "Rethinking website design. Trying to make it better", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 178, "fields": {"action_time": "2023-12-25T10:33:52.033Z", "user": 1, "content_type": 14, "object_id": "5", "object_repr": "I’ve published my blog or why is it so empty.", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "admin.logentry", "pk": 179, "fields": {"action_time": "2023-12-25T12:40:24.606Z", "user": 1, "content_type": 13, "object_id": "10", "object_repr": "How I made my first Telegram bot", "action_flag": 2, "change_message": "[{\"changed\": {\"fields\": [\"Preview\"]}}]"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$600000$2j2pfqDBQnjRfh0mtZA4fx$aSBdXv+T0OPkltu4J1JiKQOTgyv8VcDeZBWZzsAxOfc=", "last_login": "2023-12-20T15:13:08.444Z", "is_superuser": true, "username": "dima", "first_name": "", "last_name": "", "email": "", "is_staff": true, "is_active": true, "date_joined": "2023-12-20T15:12:57.206Z", "groups": [], "user_permissions": []}}, {"model": "sessions.session", "pk": "7dhsgxr78jmmbuj0zesikv062g7bdubq", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiUUJjUXJqbnpubm5DWFhuNzdZc0hKbDBvd2hQSGF2NHoifQ:1rGJxB:05M8Xz_UlsHS5fAvW-vXHQLPKb4xg3zs62pFLulaSIY", "expire_date": "2024-01-04T14:23:13.669Z"}}, {"model": "sessions.session", "pk": "b7rfkfrsdynniqica3ekgl8n8tbw1255", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiQlpYaXF0Q1gzcWxzanJqMGVCbzFYVGpoTmE1cm1RSmwifQ:1rGN98:vixTjA0vuyc0zthZqgPc594sPL4cCv5bvyQ5GFrD4sk", "expire_date": "2024-01-04T17:47:46.023Z"}}, {"model": "sessions.session", "pk": "bd0b2ue1spqal9pxd902yly20zsbg9py", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiMDh5bU1MY3NXR1Jqa2dTYW1tM1A5bnRUZHU4ZWExOTEifQ:1rHdjQ:kYqdm3hWhLt3uuE45sNz-15NenU8oF0tvj1G3guxYZA", "expire_date": "2024-01-08T05:42:28.603Z"}}, {"model": "sessions.session", "pk": "ep4zgoyih2nimzcmor7xeodo0gzd2zl0", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiYTdEUVlXc2VkcW5QbUxHN05QRDVGZ2pXOG5CZ1BGTzUifQ:1rGkiX:kGvUBJWCRgsdwlGP6d3vvCmZbo0hZWqw8-QoJJ1WGlE", "expire_date": "2024-01-05T18:57:53.259Z"}}, {"model": "sessions.session", "pk": "epmt3phuu8w80bwn8drdtjvgxojhkh6t", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiSktab0tvT0J6ZEZKWXhKRktIOXRDYlZDMVNZenNiUmgifQ:1rGO5v:bh0n2u9LOGGdjP78eEmQ88MlJFLxHUkdKcm3AM-Vjng", "expire_date": "2024-01-04T18:48:31.714Z"}}, {"model": "sessions.session", "pk": "h9vyyhslfma3o7ngrv4rkpdivr3rtshp", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiQndlc2QyOHhkSlFkQ2lYdXR1S3dUZ3pON1ZOTXMxTTUifQ:1rGN8v:vhy2bPCb0tm9l_oanVHqOuxsYYATKfNUVUl233F-rY8", "expire_date": "2024-01-04T17:47:33.751Z"}}, {"model": "sessions.session", "pk": "l4xib0dnis4rqhchxlf8frqfn5qibx51", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiT1dGMXJaanFqSnk2Q2pLRlFWZWl4QmZlSGxNeE1RMUkifQ:1rGhfP:rcFEDi2ifpftxlaNig-JlUggv8CRd9PsEUXSquLFB90", "expire_date": "2024-01-05T15:42:27.578Z"}}, {"model": "sessions.session", "pk": "qcqfcn6dbrs7ncaw2em1hwhmlb2r774n", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoia29HRDNlSUgyTk95RmdZY0I5QU96YXdYcVppakR1UTcifQ:1rGkYn:Wm1vjU_XgLjYvAoIkv4l75hHG90AmofIEcz6bYe1-Qc", "expire_date": "2024-01-05T18:47:49.689Z"}}, {"model": "sessions.session", "pk": "qp5g286d97fznzw74b7kejwcvi2l4oj1", "fields": {"session_data": ".eJyFjrtOwzAYhd_FcxX5ltjORiVQhyIqkEBMluPfTpyEGOK0UYt4d1LUJRPruXznfCNt0-in2LkBlejlYVLjPdRPr4mczu9C9uoQ5rvubP1e7J4PaIO0OU6NPiY36gBLhay1ytgFdTWgNUMdMxuHaQxVdo1kNzdljxFcv71lV4DGpGZpu0pRYFQSC6BYoSQXzvhCYEy4FcY6sJR6ailXjOUsl9hLMEAIACZFwRZoGN7i2Omvz7ymsgAl_GW4zIJXonPtbE-B9jy2BJXe9Mlt0N_88tUl3YePMKGSYIxX-v8s8vMLnNZw8Q:1rHkSF:JJTRT6ptIWVmGegFlsdjPN_szsFfgeWJU_mj3AZP7O4", "expire_date": "2024-01-08T12:53:11.029Z"}}, {"model": "sessions.session", "pk": "w7vn0f3b0rhwm82p1vdz18tgoe16jzim", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiTTdUYkd5aHdNdmxKOTBuTk13S0UxWms3NXdXNWJ0dTgifQ:1rG0Sp:uc9xPaNenWbYWVHo-J8cUPDv42H1SHGwqZz-CfKH_-4", "expire_date": "2024-01-03T17:34:35.454Z"}}, {"model": "sessions.session", "pk": "xs3nf7ef2g44pfle0rttz6zxsjfy5er4", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoick1aOEFBOXdtQ0JYNDMwN3ZmVkRDZzVHT3dqZFhHN1gifQ:1rGNKF:S5yMq4F6V8Q6sHeo1u6HWeIZxPdCsdo_Y0lNttjxDjU", "expire_date": "2024-01-04T17:59:15.847Z"}}, {"model": "sessions.session", "pk": "zu7a9txxyn3e2lvprp1pscnfm76qmy6t", "fields": {"session_data": "eyJfY3NyZnRva2VuIjoiTGV6RU1WS1ROTHBTek9yNjFScDhIdWtqa1IxZ2hmS3YifQ:1rHT8v:IIYpUifVSD6q-4sKSXS8MoerRSmW8wmXPz_BrG2-1kY", "expire_date": "2024-01-07T18:24:05.616Z"}}, {"model": "Main.image", "pk": 1, "fields": {"type": 2, "file": "articles/implementation-of-authentication-system-on-django/ResultOfAuthenticationTutorial.png", "text": "тестовый сайт где отображается интерфейс авторизации", "text_ru": "тестовый сайт где отображается интерфейс авторизации", "text_en": "testing website where displayed UI of authentication"}}, {"model": "Main.image", "pk": 2, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/команда_start_tg_бот.png", "text": "команда начать опрос телеграм бот", "text_ru": "команда начать опрос телеграм бот", "text_en": "start command for telegram bot"}}, {"model": "Main.image", "pk": 3, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/твой_возраст_tg_бот.png", "text": "твой возраст телеграм бот кнопка", "text_ru": "твой возраст телеграм бот кнопка", "text_en": "your age telegram bot button"}}, {"model": "Main.image", "pk": 4, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/твоя_страна_tg_бот.png", "text": "твоя страна телеграм кнопка", "text_ru": "твоя страна телеграм кнопка", "text_en": "your country telegram button"}}, {"model": "Main.image", "pk": 5, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/твой_пол_tg_бот.png", "text": "твой пол телеграм кнопка", "text_ru": "твой пол телеграм кнопка", "text_en": "your sex telegram button"}}, {"model": "Main.image", "pk": 6, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/твоя_работа_tg_бот.png", "text": "твоя работа телеграм кнопка", "text_ru": "твоя работа телеграм кнопка", "text_en": "your labor telegram button"}}, {"model": "Main.image", "pk": 7, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/есть_ли_машина_tg_бот.png", "text": "Есть ли у тебя машина телеграм кнопка", "text_ru": "Есть ли у тебя машина телеграм кнопка", "text_en": "Do you have a car telegram button"}}, {"model": "Main.image", "pk": 8, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/конец_опроса_tg_бот.png", "text": "конец опроса тг ботом", "text_ru": "конец опроса тг ботом", "text_en": "end of quiz telegram bot"}}, {"model": "Main.image", "pk": 9, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/команда_help_tg_бот.png", "text": "команда help telegram бота", "text_ru": "команда help telegram бота", "text_en": "help command of telegram bot"}}, {"model": "Main.image", "pk": 10, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/команда_setting_tg_бот.png", "text": "команда setting telegram бот", "text_ru": "команда setting telegram бот", "text_en": "setting command by telegram bot"}}, {"model": "Main.image", "pk": 11, "fields": {"type": 4, "file": "articles/quizbot-bot-for-telegram/команда_result_tg_бот.png", "text": "команда результатов телеграм бот", "text_ru": "команда результатов телеграм бот", "text_en": "result command telegram bot"}}, {"model": "Main.image", "pk": 12, "fields": {"type": 6, "file": "news/new-improved-design-of-website/HomeBefore.png", "text": "Домашняя до редизайна | Тим зе вебмастер", "text_ru": "Домашняя до редизайна | Тим зе вебмастер", "text_en": "Home page before redesign | Tim the webmaster"}}, {"model": "Main.image", "pk": 13, "fields": {"type": 6, "file": "news/new-improved-design-of-website/HomeAfter.png", "text": "Домашняя после редизайна | Тим зе вебмастер", "text_ru": "Домашняя после редизайна | Тим зе вебмастер", "text_en": "Home page after redesign | Tim the webmaster"}}, {"model": "Main.image", "pk": 14, "fields": {"type": 6, "file": "news/new-improved-design-of-website/PostListBefore.png", "text": "Превьюшки постов до редизайна | Тим зе вебмастер", "text_ru": "Превьюшки постов до редизайна | Тим зе вебмастер", "text_en": "Previews of posts before redesing | Tim the webmaster"}}, {"model": "Main.image", "pk": 15, "fields": {"type": 6, "file": "news/new-improved-design-of-website/PostListAfter.png", "text": "Превьюшки постов после редизайна | Тим зе вебмастер", "text_ru": "Превьюшки постов после редизайна | Тим зе вебмастер", "text_en": "Previews of posts after redesing | Tim the webmaster"}}, {"model": "Main.image", "pk": 16, "fields": {"type": 6, "file": "news/new-improved-design-of-website/ExampleOfTableOfContent.png", "text": "Генератор содержания поста | Тим зе вебмастер", "text_ru": "Генератор содержания поста | Тим зе вебмастер", "text_en": "table of content v1 | Tim the webmaster"}}, {"model": "Main.image", "pk": 17, "fields": {"type": 7, "file": "news/rethinking-website-design/PostListAfter.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 18, "fields": {"type": 7, "file": "news/rethinking-website-design/PostListBefore.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 19, "fields": {"type": 7, "file": "news/rethinking-website-design/SideMenuAfter.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 20, "fields": {"type": 7, "file": "news/rethinking-website-design/SideMenuAfter_adFqcnD.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 21, "fields": {"type": 7, "file": "news/rethinking-website-design/SideMenuBefore.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 22, "fields": {"type": 7, "file": "news/rethinking-website-design/SiteFooterAfter.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 23, "fields": {"type": 7, "file": "news/rethinking-website-design/SiteFooterBefore.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 24, "fields": {"type": 9, "file": "cases/two-types-of-commenting-system-in-one/commentingAnon.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 25, "fields": {"type": 9, "file": "cases/two-types-of-commenting-system-in-one/commentingAnonWithName.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 26, "fields": {"type": 10, "file": "cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/dynamicMessage.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 27, "fields": {"type": 10, "file": "cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/template.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 28, "fields": {"type": 10, "file": "cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/templateResult.png", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.image", "pk": 29, "fields": {"type": 2, "file": "articles/implementation-of-authentication-system-on-django/HowSessionWorks.webp", "text": "Браузер отправляет запрос и получает куки. Сервер общается с базой данных", "text_ru": "Браузер отправляет запрос и получает куки. Сервер общается с базой данных", "text_en": "The browser sends a request and receives a cookie. The server communicates with the database"}}, {"model": "Main.downloadable", "pk": 1, "fields": {"type": 2, "file": "articles/implementation-of-authentication-system-on-django/Blank_WebsiteProject.zip", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.downloadable", "pk": 2, "fields": {"type": 2, "file": "articles/implementation-of-authentication-system-on-django/Ready_WebsiteProject.zip", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.downloadable", "pk": 3, "fields": {"type": 2, "file": "articles/implementation-of-authentication-system-on-django/AuthApp.zip", "text": "", "text_ru": null, "text_en": null}}, {"model": "Main.downloadable", "pk": 4, "fields": {"type": 11, "file": "tools/image_thief/TimQuizzer.zip", "text": "", "text_ru": null, "text_en": null}}, {"model": "Post.tag", "pk": 1, "fields": {"name": "comments"}}, {"model": "Post.tag", "pk": 2, "fields": {"name": "website"}}, {"model": "Post.tag", "pk": 3, "fields": {"name": "django"}}, {"model": "Post.tag", "pk": 4, "fields": {"name": "auth"}}, {"model": "Post.tag", "pk": 5, "fields": {"name": "backend"}}, {"model": "Post.tag", "pk": 6, "fields": {"name": "bot"}}, {"model": "Post.tag", "pk": 7, "fields": {"name": "telegram"}}, {"model": "Post.tag", "pk": 8, "fields": {"name": "aiogram"}}, {"model": "Post.tag", "pk": 9, "fields": {"name": "begining"}}, {"model": "Post.tag", "pk": 11, "fields": {"name": "design"}}, {"model": "Post.tag", "pk": 12, "fields": {"name": "ux/ui"}}, {"model": "Post.tag", "pk": 13, "fields": {"name": "ajax"}}, {"model": "Post.tag", "pk": 14, "fields": {"name": "js"}}, {"model": "Post.tag", "pk": 15, "fields": {"name": "parser"}}, {"model": "Post.tag", "pk": 16, "fields": {"name": "images"}}, {"model": "Post.tag", "pk": 17, "fields": {"name": "python_script"}}, {"model": "Post.tag", "pk": 18, "fields": {"name": "django_app"}}, {"model": "Post.tag", "pk": 19, "fields": {"name": "gamedev"}}, {"model": "Post.tag", "pk": 20, "fields": {"name": "game engine"}}, {"model": "Post.tag", "pk": 21, "fields": {"name": "backstory"}}, {"model": "Post.tag", "pk": 22, "fields": {"name": "drawing"}}, {"model": "Post.tag", "pk": 23, "fields": {"name": "me"}}, {"model": "Post.tag", "pk": 24, "fields": {"name": "seo"}}, {"model": "Post.tag", "pk": 25, "fields": {"name": "telegram"}}, {"model": "Post.tag", "pk": 26, "fields": {"name": "server"}}, {"model": "Post.tag", "pk": 27, "fields": {"name": "website builder"}}, {"model": "Post.tag", "pk": 28, "fields": {"name": "django template"}}, {"model": "Post.tag", "pk": 29, "fields": {"name": "django model"}}, {"model": "Post.category", "pk": 1, "fields": {"name": "Статьи", "name_ru": "Статьи", "name_en": "Articles", "description": "Тип поста, который объединяет под собой самые интересные и дизайно-независимые от сайта посты самых разных форматов. От топов до обзоров и туториалов.", "description_ru": "Тип поста, который объединяет под собой самые интересные и дизайно-независимые от сайта посты самых разных форматов. От топов до обзоров и туториалов.", "description_en": "A type of post that combines the most interesting and design-independent posts of a variety of formats. Which includes reviews, tutorials and more.", "slug": "articles", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/post_list.html"}}, {"model": "Post.category", "pk": 2, "fields": {"name": "Новости", "name_ru": "Новости", "name_en": "News", "description": "Здесь ты сможешь почитать новости о моём сайте и последние новости связаные с ботами, кодингом, парсингом разработкой сайтов и многим другим.", "description_ru": "Здесь ты сможешь почитать новости о моём сайте и последние новости связаные с ботами, кодингом, парсингом разработкой сайтов и многим другим.", "description_en": "Here you can read news about my site and the latest news related to bots, coding, parsing, website development and much more.", "slug": "news", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/post_list.html"}}, {"model": "Post.category", "pk": 3, "fields": {"name": "Кейсы", "name_ru": "Кейсы", "name_en": "Cases", "description": "Случаи из рабочей практики. Демонстрация моих практических навыков и умений.", "description_ru": "Случаи из рабочей практики. Демонстрация моих практических навыков и умений.", "description_en": "Cases from working practice. Demonstration of my skills and knowledge.", "slug": "cases", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/post_list.html"}}, {"model": "Post.category", "pk": 4, "fields": {"name": "Вопросы и ответы", "name_ru": "Вопросы и ответы", "name_en": "Q&A", "description": "Часто задаваемые вопросы и вопросы, ответы на которые, не нашлось места в постах.", "description_ru": "Часто задаваемые вопросы и вопросы, ответы на которые, не нашлось места в постах.", "description_en": "Frequently asked questions and questions, the answers to which were not found in the posts.", "slug": "qa", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/termin_list.html"}}, {"model": "Post.category", "pk": 5, "fields": {"name": "Термины и определения", "name_ru": "Термины и определения", "name_en": "T&D", "description": "Самые различные термины и крылатые фразы на которые нужно знать ответ.", "description_ru": "Самые различные термины и крылатые фразы на которые нужно знать ответ.", "description_en": "A variety of terms and catchphrases to which you need to know the answer.", "slug": "td", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/termin_list.html"}}, {"model": "Post.category", "pk": 6, "fields": {"name": "Инструменты", "name_ru": "Инструменты", "name_en": "Tools", "description": "Коллекция полезных инструментов, которые я когда-либо создавал.", "description_ru": "Коллекция полезных инструментов, которые я когда-либо создавал.", "description_en": "A collection of useful tools I've ever created.", "slug": "tools", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/product_list.html"}}, {"model": "Post.category", "pk": 7, "fields": {"name": "Услуги", "name_ru": "Услуги", "name_en": "Services", "description": "Работа, которую я смогу выполнить быстро и качественно. За соответствующее вознаграждение.", "description_ru": "Работа, которую я смогу выполнить быстро и качественно. За соответствующее вознаграждение.", "description_en": "A job that I can do quickly and efficiently. For appropriate remuneration.", "slug": "services", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/product_list.html"}}, {"model": "Post.post", "pk": 1, "fields": {"category": 1, "slug": "commenting-system-for-a-website-using-the-django-framework", "timeCreated": "2023-11-11T14:32:09Z", "timeUpdated": "2023-12-24T18:19:31.771Z", "isPublished": true, "likes": 3, "shares": 0, "viewed": 223, "tags": [1, 2, 3]}}, {"model": "Post.post", "pk": 2, "fields": {"category": 1, "slug": "implementation-of-authentication-system-on-django", "timeCreated": "2023-10-30T21:00:44Z", "timeUpdated": "2023-12-24T18:19:49.611Z", "isPublished": true, "likes": 2, "shares": 0, "viewed": 345, "tags": [3, 4, 5]}}, {"model": "Post.post", "pk": 3, "fields": {"category": 1, "slug": "make-login-and-registration-forms-using-django", "timeCreated": "2023-10-16T16:59:59Z", "timeUpdated": "2023-12-24T18:20:03.688Z", "isPublished": true, "likes": 1, "shares": 0, "viewed": 153, "tags": [3, 4, 5]}}, {"model": "Post.post", "pk": 4, "fields": {"category": 1, "slug": "quizbot-bot-for-telegram", "timeCreated": "2023-11-16T07:01:54Z", "timeUpdated": "2023-12-24T18:28:00.536Z", "isPublished": true, "likes": 4, "shares": 1, "viewed": 377, "tags": [6, 7, 8]}}, {"model": "Post.post", "pk": 5, "fields": {"category": 2, "slug": "nachalo-bloga-ili-to-pochemu-tut-tak-pusto", "timeCreated": "2023-10-12T17:08:54Z", "timeUpdated": "2023-12-25T10:34:25.372Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 96, "tags": [9]}}, {"model": "Post.post", "pk": 6, "fields": {"category": 2, "slug": "new-improved-design-of-website", "timeCreated": "2023-10-30T18:25:23Z", "timeUpdated": "2023-12-25T05:58:49.858Z", "isPublished": true, "likes": 1, "shares": 0, "viewed": 241, "tags": [2, 11]}}, {"model": "Post.post", "pk": 7, "fields": {"category": 2, "slug": "rethinking-website-design", "timeCreated": "2023-12-21T14:19:13.425Z", "timeUpdated": "2023-12-25T06:50:55.387Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 12, "tags": [11, 12]}}, {"model": "Post.post", "pk": 8, "fields": {"category": 3, "slug": "sdelat-sistemu-avtorizacii-i-registracii-polzovatelej-na-django", "timeCreated": "2023-11-05T07:46:46Z", "timeUpdated": "2023-12-25T12:14:41.551Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 156, "tags": [3, 4, 5, 13]}}, {"model": "Post.post", "pk": 9, "fields": {"category": 3, "slug": "two-types-of-commenting-system-in-one", "timeCreated": "2023-12-11T18:31:18Z", "timeUpdated": "2023-12-25T12:11:36.438Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 110, "tags": [1, 2, 14]}}, {"model": "Post.post", "pk": 10, "fields": {"category": 3, "slug": "quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram", "timeCreated": "2023-11-26T15:17:09Z", "timeUpdated": "2023-12-25T12:53:09.978Z", "isPublished": true, "likes": 1, "shares": 0, "viewed": 151, "tags": [6, 7, 8]}}, {"model": "Post.post", "pk": 11, "fields": {"category": 6, "slug": "image_thief", "timeCreated": "2023-11-27T18:32:14Z", "timeUpdated": "2023-12-23T15:27:48.225Z", "isPublished": true, "likes": 2, "shares": 0, "viewed": 102, "tags": [15, 16, 17, 18]}}, {"model": "Post.post", "pk": 12, "fields": {"category": 4, "slug": "what-do-you-do-before-becomming-webmaster", "timeCreated": "2023-12-22T17:59:22.939Z", "timeUpdated": "2023-12-22T18:48:25.304Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [19, 20]}}, {"model": "Post.post", "pk": 13, "fields": {"category": 4, "slug": "why-aiogram", "timeCreated": "2023-12-22T18:03:02.198Z", "timeUpdated": "2023-12-22T18:04:05.489Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 0, "tags": [6, 8]}}, {"model": "Post.post", "pk": 14, "fields": {"category": 4, "slug": "django-over-website-builders", "timeCreated": "2023-12-22T18:11:57.852Z", "timeUpdated": "2023-12-23T18:11:42.969Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [20, 21]}}, {"model": "Post.post", "pk": 15, "fields": {"category": 4, "slug": "who-is-a-painter", "timeCreated": "2023-12-22T18:16:15.914Z", "timeUpdated": "2023-12-22T18:30:16.298Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 0, "tags": [22, 23]}}, {"model": "Post.post", "pk": 16, "fields": {"category": 4, "slug": "your-hosting-provider", "timeCreated": "2023-12-22T18:18:38.926Z", "timeUpdated": "2023-12-22T18:47:28.011Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [2, 5]}}, {"model": "Post.post", "pk": 17, "fields": {"category": 4, "slug": "what-about-seo-services", "timeCreated": "2023-12-22T18:24:34.597Z", "timeUpdated": "2023-12-22T18:48:18.762Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [24]}}, {"model": "Post.post", "pk": 18, "fields": {"category": 4, "slug": "why-quit-gamedev", "timeCreated": "2023-12-22T18:29:37.945Z", "timeUpdated": "2023-12-22T18:29:37.946Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 0, "tags": [19, 23]}}, {"model": "Post.post", "pk": 19, "fields": {"category": 5, "slug": "telegram-bot", "timeCreated": "2023-12-22T18:41:17.311Z", "timeUpdated": "2023-12-23T13:38:54.433Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 3, "tags": [6, 25]}}, {"model": "Post.post", "pk": 20, "fields": {"category": 5, "slug": "aiogram", "timeCreated": "2023-12-22T18:47:07.259Z", "timeUpdated": "2023-12-23T13:38:49.302Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 2, "tags": [8]}}, {"model": "Post.post", "pk": 21, "fields": {"category": 5, "slug": "vps", "timeCreated": "2023-12-22T18:55:28.462Z", "timeUpdated": "2023-12-23T13:41:21.724Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 5, "tags": [5, 26]}}, {"model": "Post.post", "pk": 22, "fields": {"category": 5, "slug": "pagination", "timeCreated": "2023-12-23T12:44:44.290Z", "timeUpdated": "2023-12-23T12:45:13.494Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [11, 12]}}, {"model": "Post.post", "pk": 23, "fields": {"category": 5, "slug": "website-builder", "timeCreated": "2023-12-23T12:50:23.389Z", "timeUpdated": "2023-12-25T10:34:37.274Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [27]}}, {"model": "Post.post", "pk": 24, "fields": {"category": 5, "slug": "django-template", "timeCreated": "2023-12-23T12:54:42.657Z", "timeUpdated": "2023-12-23T13:38:42.023Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [28]}}, {"model": "Post.post", "pk": 25, "fields": {"category": 5, "slug": "comment", "timeCreated": "2023-12-23T12:59:50.446Z", "timeUpdated": "2023-12-23T13:38:37.714Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": []}}, {"model": "Post.post", "pk": 26, "fields": {"category": 5, "slug": "django-model", "timeCreated": "2023-12-23T13:05:28.509Z", "timeUpdated": "2023-12-23T13:38:33.473Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 1, "tags": [29]}}, {"model": "Post.post", "pk": 27, "fields": {"category": 5, "slug": "authentication", "timeCreated": "2023-12-23T13:11:58.436Z", "timeUpdated": "2023-12-23T17:51:06.110Z", "isPublished": true, "likes": 0, "shares": 0, "viewed": 5, "tags": [4, 5]}}, {"model": "Post.article", "pk": 1, "fields": {"title": "Комментарии на сайт используя Django", "title_ru": "Комментарии на сайт используя Django", "title_en": "Commenting system for a website, using the Django framework", "description": "В этой статье я покажу, как я реализовывал комментирование на моём сайте. Комментирование, \r\nкоторое доступно как анонимам, так и зарегестрированным пользователям.", "description_ru": "В этой статье я покажу, как я реализовывал комментирование на моём сайте. Комментирование, \r\nкоторое доступно как анонимам, так и зарегестрированным пользователям.", "description_en": "In this article I will show how I implemented commenting on my website. Commenting,\r\nwhich is available to both anonymous and registered users.", "preview": "articles/commenting-system-for-a-website-using-the-django-framework/website_implementing_comments.webp", "template": "articles/commenting-system-for-a-website-using-the-django-framework/КакДобавитьКоммента_ELkqj8O.html", "template_ru": "articles/commenting-system-for-a-website-using-the-django-framework/КакДобавитьКоммента_ELkqj8O.html", "template_en": "articles/commenting-system-for-a-website-using-the-django-framework/HowToImplementComme_9YqC0v4.html"}}, {"model": "Post.article", "pk": 2, "fields": {"title": "Как реализовать регистрацию и логирование пользователей", "title_ru": "Как реализовать регистрацию и логирование пользователей", "title_en": "Implementation of authentication system on django", "description": "Сразу оговорюсь, что система аутентификации, которую мы с тобой будем писать не основана на встроеном приложении django, django.contrib.auth . Это будет отдельное приложение с отдельной моделью к ней. Мы будем делать простую и понятную систему авторизации, основанную на анонимных сессионных ключах браузера.", "description_ru": "Сразу оговорюсь, что система аутентификации, которую мы с тобой будем писать не основана на встроеном приложении django, django.contrib.auth . Это будет отдельное приложение с отдельной моделью к ней. Мы будем делать простую и понятную систему авторизации, основанную на анонимных сессионных ключах браузера.", "description_en": "Let me make a reservation right away that the authentication system that you and I will write is not based on the built-in Django application, django.contrib.auth. This will be a separate application with a separate model for it. We will create a simple and understandable authorization system, based on anonymous browser session keys.", "preview": "articles/implementation-of-authentication-system-on-django/lock_and_key_django_authentication.webp", "template": "articles/implementation-of-authentication-system-on-django/КакСоздатьСистемуАутентификации.html", "template_ru": "articles/implementation-of-authentication-system-on-django/КакСоздатьСистемуАутентификации.html", "template_en": "articles/implementation-of-authentication-system-on-django/HowToMakeAuthenticationSystem.html"}}, {"model": "Post.article", "pk": 3, "fields": {"title": "Сделать систему авторизации и регистрации пользователей на Django", "title_ru": "Сделать систему авторизации и регистрации пользователей на Django", "title_en": "Make login and registration forms using Django", "description": "Реализовать систему аутентификации пользователей. Для этого создаётся форма регистрации и форма для входа и выхода на сайте timthewebmaster.com.", "description_ru": "Реализовать систему аутентификации пользователей. Для этого создаётся форма регистрации и форма для входа и выхода на сайте timthewebmaster.com.", "description_en": "Implement a user authentication system. For this purpose, a registration form and login form are created on the website timthewebmaster.com.", "preview": "articles/make-login-and-registration-forms-using-django/building_at_night_login_registration.webp", "template": "articles/make-login-and-registration-forms-using-django/СделатьСистемуЛогированияИРегистрации.html", "template_ru": "articles/make-login-and-registration-forms-using-django/СделатьСистемуЛогированияИРегистрации.html", "template_en": "articles/make-login-and-registration-forms-using-django/MakeLoginRegistrationForms.html"}}, {"model": "Post.article", "pk": 4, "fields": {"title": "Бот анонимных вопросов на телеграм, или квиз бот.", "title_ru": "Бот анонимных вопросов на телеграм, или квиз бот.", "title_en": "Quizbot, or questionnaire bot for Telegram. Using python, aiogram.", "description": "Привет в этом кейсе я продемонстрирую тебе, как я сделал своего бота опросника.\r\nПриведу исходный код python и bash скриптов. Объясню структуру, и предназначение каждого файла и обработчика. Ну и конечно сможешь по взаимодействовать с моим, уже готовым ботом.", "description_ru": "Привет в этом кейсе я продемонстрирую тебе, как я сделал своего бота опросника.\r\nПриведу исходный код python и bash скриптов. Объясню структуру, и предназначение каждого файла и обработчика. Ну и конечно сможешь по взаимодействовать с моим, уже готовым ботом.", "description_en": "Hello, in this case I will show you how, I made my quiz bot. I will provide the source code of the python and bash scripts. I will explain the structure and purpose of each file\r\nand the handler. And of course you can interact with my ready-made bot.", "preview": "articles/quizbot-bot-for-telegram/robot_sending_a_aircraft.webp", "template": "articles/quizbot-bot-for-telegram/БотОпросникДляТелеграма.html", "template_ru": "articles/quizbot-bot-for-telegram/БотОпросникДляТелеграма.html", "template_en": "articles/quizbot-bot-for-telegram/QuizBotForTelegram.html"}}, {"model": "Post.news", "pk": 5, "fields": {"headline": "Начало блога. Или то, почему тут так пусто", "headline_ru": "Начало блога. Или то, почему тут так пусто", "headline_en": "I’ve published my blog or why is it so empty.", "description": "Да, я опубликовал свой блог/портфолио сайт. И да, тут пустовато. Читать пустой блог не очень интересно. Я знаю. У меня был выбор, затянуть с началом публикации блога-сайта ( по большей части готового в техническом плане), но с уже некоторыми статьями, кейсами, новостями и проектами, либо опубликовать новый, чистый  блог и делать контент по мере возможности. Я выбрал второй вариант.", "description_ru": "Да, я опубликовал свой блог/портфолио сайт. И да, тут пустовато. Читать пустой блог не очень интересно. Я знаю. У меня был выбор, затянуть с началом публикации блога-сайта ( по большей части готового в техническом плане), но с уже некоторыми статьями, кейсами, новостями и проектами, либо опубликовать новый, чистый  блог и делать контент по мере возможности. Я выбрал второй вариант.", "description_en": "Yes, I’ve published my blog/portfolio website. And yes, it is empty. And it is not fun to read an empty blog. I know. Basically, I had a choice: to publish a blog website with a large number of blog posts, but it was going to take some time to produce and maybe never have a sign of light on it. Or I can publish a blog about myself right now, and I will be sure that I’m not going to leave or abandon this project like many others before. I chose the second one.", "first_sentence": "Чёрт. Здесь чертовски пусто!", "first_sentence_ru": "Чёрт. Здесь чертовски пусто!", "first_sentence_en": "Damn. It's so empty here!", "lead": "Да, я опубликовал свой блог/портфолио сайт. И да, тут пустовато. Читать пустой блог не очень интересно. Я знаю.", "lead_ru": "Да, я опубликовал свой блог/портфолио сайт. И да, тут пустовато. Читать пустой блог не очень интересно. Я знаю.", "lead_en": "Yes, I’ve published my blog/portfolio website. And yes, it is empty. And it is not fun to read an empty blog. I know.", "body": "У меня был выбор, затянуть с началом публикации блога-сайта ( по большей части готового в техническом плане), но с уже некоторым наполнением, либо опубликовать новый, чистый  блог и делать контент по мере возможности. Я выбрал второй вариант.\r\n{: .text }\r\n\r\nКак по мне, так будет честнее по отношению к моим читателям. Плюс, пока я буду писать новые статьи, сайт будет потихоньку расти ( будет набирать авторитет в глазах поисковиков).\r\n{: .text }\r\n\r\nНе хотелось бы повторяться о том про что этот новый блог, кто автор. Всё уже сказано на домашней странице и странице об авторе. Но, просто хочу сказать, что давно пора было это сделать ;) \r\n{: .text }\r\n\r\nХотя, конечно, мне бы тогда не хватило бы технических навыков для создания подобного толку онлайн блога. Конечно, можно возразить, что, почему бы не воспользоваться бесплатными [конструкторами сайтов](/ru/td/website-builder), **шаблонами** там и прочим. Ответ может быть не очевиден сейчас, но со временем вы поймёте, что я просто не ищу простых путей и занимаюсь, и учу то, что мне нравится.\r\n{: .text .ref }", "body_ru": "У меня был выбор, затянуть с началом публикации блога-сайта ( по большей части готового в техническом плане), но с уже некоторым наполнением, либо опубликовать новый, чистый  блог и делать контент по мере возможности. Я выбрал второй вариант.\r\n{: .text }\r\n\r\nКак по мне, так будет честнее по отношению к моим читателям. Плюс, пока я буду писать новые статьи, сайт будет потихоньку расти ( будет набирать авторитет в глазах поисковиков).\r\n{: .text }\r\n\r\nНе хотелось бы повторяться о том про что этот новый блог, кто автор. Всё уже сказано на домашней странице и странице об авторе. Но, просто хочу сказать, что давно пора было это сделать ;) \r\n{: .text }\r\n\r\nХотя, конечно, мне бы тогда не хватило бы технических навыков для создания подобного толку онлайн блога. Конечно, можно возразить, что, почему бы не воспользоваться бесплатными [конструкторами сайтов](/ru/td/website-builder), **шаблонами** там и прочим. Ответ может быть не очевиден сейчас, но со временем вы поймёте, что я просто не ищу простых путей и занимаюсь, и учу то, что мне нравится.\r\n{: .text .ref }", "body_en": "Basically, I had a choice: to publish a blog website with a large number of blog posts, but it was going to take some time to produce and maybe never have a sign of light on it. Or I can publish a blog about myself right now, and I will be sure that I’m not going to leave or abandon this project like many others before. I chose the second one.\r\n{: .text }\r\n\r\nIn my opinion, it is much more fair to my guests and readers. Plus, until I start writing new articles and posts, the site is going to take some time (in the eyes of search engines like **Google** or **Bing**).\r\n{: .text }\r\n\r\nI do not want to ask myself, *what this new blog is about or who the author of all of it is*. All of these questions have been answered on the home page and on the author page. I just want to say that it should have been done many, many years ago. \r\n{: .text }\r\n\r\nBut, honestly speaking, back then, I probably couldn’t create such a website or blog. Not enough skills and experience. Sure, you may say that you may use some [website builders](/en/td/website-builder), **free templates**, or something similar. My answer will not be so obvious right now, but if you continue reading my articles and posts, I’m sure you will get it.\r\n{: .text .ref }", "ending": "И вся моя суть пронизана этим. Не искать лёгких путей. Это всегда должен быть тяжёлый и мучительный путь к решению. И к счастью иль не счастью, это мой лучший способ выучить что-нибудь новое. \r\n{: .text }\r\n\r\nНа этом пока всё.\r\n{: .text }", "ending_ru": "И вся моя суть пронизана этим. Не искать лёгких путей. Это всегда должен быть тяжёлый и мучительный путь к решению. И к счастью иль не счастью, это мой лучший способ выучить что-нибудь новое. \r\n{: .text }\r\n\r\nНа этом пока всё.\r\n{: .text }", "ending_en": "My whole thing is that I’m not choosing the easy way. It is always hard and confusing way to a solution. And I’m learning only those things and concepts that I like. For example, I think the best site for a blog is your own website, just because it gives you more freedom and opportunities.\r\n{: text }", "preview": "news/nachalo-bloga-ili-to-pochemu-tut-tak-pusto/empty_box_and_question_attention_signs.webp", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/news.html"}}, {"model": "Post.news", "pk": 6, "fields": {"headline": "Новый улучшеный дизайн сайта", "headline_ru": "Новый улучшеный дизайн сайта", "headline_en": "New improved design of website", "description": "Новость об изменении дизайна моего сайта. А именно домашняя страница, превьюшки постов и добавлен генератор содержания.", "description_ru": "Новость об изменении дизайна моего сайта. А именно домашняя страница, превьюшки постов и добавлен генератор содержания.", "description_en": "News about changing the design of my site. Namely the home page, post previews and a table of content generator  has been added.", "first_sentence": "Домашние страницы, это тебе не постики писать.", "first_sentence_ru": "Домашние страницы, это тебе не постики писать.", "first_sentence_en": "Home page designing is not as easy as writing posts.", "lead": "Новость об изменении дизайна моего сайта. А именно домашняя страница, превьюшки постов. а также добавлен генератор содержания статей.", "lead_ru": "Новость об изменении дизайна моего сайта. А именно домашняя страница, превьюшки постов. а также добавлен генератор содержания статей.", "lead_en": "News about changing the design of my site. Namely the home page, post previews and a table of content generator has been added.", "body": "## О домашней странице сайта {: .paragraph }\r\nПо моим соображениям, раз домашняя страница почти не привлекает людей из поиска, она должна быть либо *‘Лицом сайта’*, либо очень продвинутой *навигационной* страницей. Короче, той страницей откуда можно попасть на любую другую.\r\n{: .text }\r\n\r\n### Домашняя страница до {: .paragraph }\r\n![Домашняя до редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered data-src=\"/media/news/new-improved-design-of-website/HomeBefore.png\" .dynamic_image }\r\n\r\n### Домашняя страница после {: .paragraph }\r\n![Домашняя после редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/HomeAfter.png\" }\r\n\r\n Как можно увидеть, в первой версии я решил сделать упор на раскрытие тематики сайта. То есть о чём он, как разбиты статьи на нём и в целом о чём вообще я пишу.\r\n{: .text }\r\n\r\nВ новой версии было решено избавиться от всего этого и сделать интерактивные элементы, где посетитель сможет узнать последние новости, статьи и выполненные кейсы. Оставил только списки оказываемых услуг. \r\n{: .text }\r\n\r\n## О превьюшках постов  {: .paragraph }\r\nНасчёт превъюшек статей. Сделал самый базовый и простой вариант. Скорее всего окончательный. Хотя для категории проектов имеется парочка идей, которые я пока раскрывать не буду. \r\n{: .text }\r\n\r\n### Превьюшки до {: .paragraph }\r\n![Превьюшки постов до редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/PostListBefore.png\" }\r\n\r\n### Превьюшки после {: .paragraph }\r\n![Превьюшки постов после редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/PostListAfter.png\" }\r\n\r\n## О генераторе панели навигации {: .paragraph }\r\n Ещё создал простенький скрипт который генерирует навигационное меню для быстрой навигации по странице. Его можно найти на страницах about и services.\r\n{: .text }\r\n\r\n### Генератор содержания {: .paragraph }\r\n![Генератор содержания поста | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/ExampleOfTableOfContent.png\"}\r\n\r\n Я конечно немного сомневаюсь насчёт выбора картинки для отображения элементов списка. Может это гениально, а может тупо и не удобно. Поживём увидим. \r\n{: .text }", "body_ru": "## О домашней странице сайта {: .paragraph }\r\nПо моим соображениям, раз домашняя страница почти не привлекает людей из поиска, она должна быть либо *‘Лицом сайта’*, либо очень продвинутой *навигационной* страницей. Короче, той страницей откуда можно попасть на любую другую.\r\n{: .text }\r\n\r\n### Домашняя страница до {: .paragraph }\r\n![Домашняя до редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered data-src=\"/media/news/new-improved-design-of-website/HomeBefore.png\" .dynamic_image }\r\n\r\n### Домашняя страница после {: .paragraph }\r\n![Домашняя после редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/HomeAfter.png\" }\r\n\r\n Как можно увидеть, в первой версии я решил сделать упор на раскрытие тематики сайта. То есть о чём он, как разбиты статьи на нём и в целом о чём вообще я пишу.\r\n{: .text }\r\n\r\nВ новой версии было решено избавиться от всего этого и сделать интерактивные элементы, где посетитель сможет узнать последние новости, статьи и выполненные кейсы. Оставил только списки оказываемых услуг. \r\n{: .text }\r\n\r\n## О превьюшках постов  {: .paragraph }\r\nНасчёт превъюшек статей. Сделал самый базовый и простой вариант. Скорее всего окончательный. Хотя для категории проектов имеется парочка идей, которые я пока раскрывать не буду. \r\n{: .text }\r\n\r\n### Превьюшки до {: .paragraph }\r\n![Превьюшки постов до редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/PostListBefore.png\" }\r\n\r\n### Превьюшки после {: .paragraph }\r\n![Превьюшки постов после редизайна | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/PostListAfter.png\" }\r\n\r\n## О генераторе панели навигации {: .paragraph }\r\n Ещё создал простенький скрипт который генерирует навигационное меню для быстрой навигации по странице. Его можно найти на страницах about и services.\r\n{: .text }\r\n\r\n### Генератор содержания {: .paragraph }\r\n![Генератор содержания поста | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/ExampleOfTableOfContent.png\"}\r\n\r\n Я конечно немного сомневаюсь насчёт выбора картинки для отображения элементов списка. Может это гениально, а может тупо и не удобно. Поживём увидим. \r\n{: .text }", "body_en": "## About home page of website {: .paragraph }\r\nThis is not just a landing page, but a main one. In my opinion, since the home page hardly attracts people from search, it should either be the *‘Face of the Site’* or a very advanced *navigation* page. In short, the page from which you can get to any other.\r\n{: .text }\r\n\r\n### Home page before {: .paragraph }\r\n![Home page before redesign | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered data-src=\"/media/news/new-improved-design-of-website/HomeBefore.png\" .dynamic_image }\r\n\r\n### Home page after {: .paragraph }\r\n![Home page after redesign | Tim the webmaster](/static/placeholder.svg){: .image .dynamic_image .image-bordered data-src=\"/media/news/new-improved-design-of-website/HomeAfter.png\" }\r\n\r\nAs you can see, in the first version I decided to focus on revealing the theme of the site. That is, what is it about, how the articles on it are divided.\r\n{: .text }\r\n\r\nIn the new version, it was decided to get rid of all this and create interactive elements where the visitor can find out the latest news, articles and completed cases. I left only lists of services provided by me. \r\n{: .text }\r\n\r\n## About post preview  {: .paragraph }\r\nRegarding article previews. I made the most basic and simple version. Most likely final. Although there are a couple of ideas for the project preview that gonna be changed for sure. \r\n{: .text }\r\n\r\n### Preview before {: .paragraph }\r\n![Previews of posts before redesing | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/PostListBefore.png\" }\r\n\r\n### Preview after {: .paragraph }\r\n![Previews of posts after redesing | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/PostListAfter.png\" }\r\n\r\n## About generator of table of content {: .paragraph }\r\nI also created a simple script that generates a navigation menu for quick navigation around the page. It can be found on the about and services pages.\r\n{: .text }\r\n\r\n### Table of content {: .paragraph }\r\n![table of content v1 | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/new-improved-design-of-website/ExampleOfTableOfContent.png\"}\r\n\r\nOf course, I have a little doubt about choosing a picture to display list items. Maybe it's brilliant, or maybe it's stupid and inconvenient. Will see. \r\n{: .text }", "ending": "## Заключение {: .paragraph }\r\nВ заключении хотелось бы заключить и принять один не маловажный факт. \r\n{: .text }\r\n\r\nСкорее всего, я ещё не один раз поменяю стиль своего сайта. Пока не найду тот\r\nсамый... *особенный*. Ну а пока имеем что имеем.\r\n{: .text }\r\n\r\nПока.\r\n{: .text }", "ending_ru": "## Заключение {: .paragraph }\r\nВ заключении хотелось бы заключить и принять один не маловажный факт. \r\n{: .text }\r\n\r\nСкорее всего, я ещё не один раз поменяю стиль своего сайта. Пока не найду тот\r\nсамый... *особенный*. Ну а пока имеем что имеем.\r\n{: .text }\r\n\r\nПока.\r\n{: .text }", "ending_en": "## Conclusion {: .paragraph }\r\nIn conclusion, I would like to accept one important fact.\r\n{: .text }\r\n\r\nMost likely, I will change the style of my site more than once. Until I find the one\r\nthe most... *special*. Well, for now we have what we have.\r\n{: .text }\r\n\r\nBye.\r\n{: .text }", "preview": "news/new-improved-design-of-website/new_design_of_website.webp", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/news.html"}}, {"model": "Post.news", "pk": 7, "fields": {"headline": "Переосмысление дизайна сайта. Попытка сделать его лучше", "headline_ru": "Переосмысление дизайна сайта. Попытка сделать его лучше", "headline_en": "Rethinking website design. Trying to make it better", "description": "Попытался переосмыслить дизайн моего сайта. И сделать его лучше. В основу изменений легли рекомендации с сайта PageSpeed Insights. А целью, стало добится максимального удобства для гостей моего сайта.", "description_ru": "Попытался переосмыслить дизайн моего сайта. И сделать его лучше. В основу изменений легли рекомендации с сайта PageSpeed Insights. А целью, стало добится максимального удобства для гостей моего сайта.", "description_en": "An attempt at rethinking website design. And make it better.\r\nThe foundation of the changes came from the PageSpeed Insights website. The main goal of this 'Rethinking design', was to achieve maximum usability and improve the user experience of my website for guests.", "first_sentence": "Под \"переосмыслил\" я имел ввиду полностью переделал.", "first_sentence_ru": "Под \"переосмыслил\" я имел ввиду полностью переделал.", "first_sentence_en": "By “rethinking” I meant a complete redesign of the site.", "lead": "Не знаю на сколько тривиальная это задача для верстальщиков, но для меня, по факту, это сравни написанию нового сайта. Пришлось перелопатить больше 50 файлов стилей, проверить и изменить больше 200 изображений, переписать 10 файлов скриптов ( ладно тут цифра не настолько впечатляющая, но всё же).", "lead_ru": "Не знаю на сколько тривиальная это задача для верстальщиков, но для меня, по факту, это сравни написанию нового сайта. Пришлось перелопатить больше 50 файлов стилей, проверить и изменить больше 200 изображений, переписать 10 файлов скриптов ( ладно тут цифра не настолько впечатляющая, но всё же).", "lead_en": "I don't know how trivial this task is for frontend developers, but for me, it's like making a whole new website. I've revisited approximately 50 CSS files, 200 images, and 10 JS files (ok, not so big, but still).", "body": "## Список изменений {: .paragraph }\r\nИтак, что же всё таки изменилось с сайтом?\r\n{: .text }\r\n\r\n* Изображения стали динамически подгружаться, только при прямой видимости.\r\n{: .list_el }\r\n* Изменилась раскладка и структура сайта.\r\n{: .list_el }\r\n* Были добавлены 2 других шрифта, для акцентирования и для заголовков.\r\n{: .list_el }\r\n* Была выбрана и встроена строгая цветовая палитра сайта.\r\n{: .list_el }\r\n* Решины проблемы с размером текста.\r\n{: .list_el }\r\n* Все изображения теперь в формате **webp** или **svg**\r\n{: .list_el }\r\n* Для боевого сервера все **JS** и **СSS** фалы минифицированы\r\n{: .list_el }\r\n* Изменено отображение списка статей и их превьюшки\r\n{: .list_el }\r\n\r\nИ ещё много много чего ещё, но там по мелочи. По типу изменить анимацию нажатия кнопок \r\nили исправить перевод.\r\n{: .text }\r\n\r\n## Что изменилось, с изображениями {: .paragraph }\r\n### Боковое меню {: .paragraph }\r\nВот такое боковое меню было до, оно было справо и было не интерактивным.\r\n{: .text }\r\n\r\n![Боковое меню сайта | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SideMenuBefore.png\"}\r\n\r\nИ таким оно стало. Теперь оно интерактивное и слева\r\n{: .text }\r\n\r\n![Боковое меню сайта | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SideMenuAfter.png\"}\r\n\r\n### Футер {: .paragraph }\r\nФутер до\r\n{: .text }\r\n\r\n![Футер сайта до | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SiteFooterBefore.png\"}\r\n\r\nФутер стал чуть более вменяемым, как стало.\r\n{: .text }\r\n\r\n![Футер сайта после | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SiteFooterAfter.png\"}\r\n\r\n### Список статей {: .paragraph }\r\nСписок статей/постов ещё будет улучшаться. Я как минимум\r\nсобираюсь поменять бесконечный скроллинг на [пагинацию](/ru/td/pagination).\r\nИбо по моему мнению, она больше понятна для человека *(как минимум ты видишь \r\nсколько тебе осталось до конца)*\r\nДа и для **SEO** и внутренней перелинковки, она предпочтительней.\r\n{: .text .ref }\r\n\r\nКак было\r\n{: .text }\r\n\r\n![Список постов сайта до | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/PostListBefore.png\"}\r\n\r\nКак стало\r\n{: .text }\r\n\r\n![Список постов сайта после | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/PostListAfter.png\"}", "body_ru": "## Список изменений {: .paragraph }\r\nИтак, что же всё таки изменилось с сайтом?\r\n{: .text }\r\n\r\n* Изображения стали динамически подгружаться, только при прямой видимости.\r\n{: .list_el }\r\n* Изменилась раскладка и структура сайта.\r\n{: .list_el }\r\n* Были добавлены 2 других шрифта, для акцентирования и для заголовков.\r\n{: .list_el }\r\n* Была выбрана и встроена строгая цветовая палитра сайта.\r\n{: .list_el }\r\n* Решины проблемы с размером текста.\r\n{: .list_el }\r\n* Все изображения теперь в формате **webp** или **svg**\r\n{: .list_el }\r\n* Для боевого сервера все **JS** и **СSS** фалы минифицированы\r\n{: .list_el }\r\n* Изменено отображение списка статей и их превьюшки\r\n{: .list_el }\r\n\r\nИ ещё много много чего ещё, но там по мелочи. По типу изменить анимацию нажатия кнопок \r\nили исправить перевод.\r\n{: .text }\r\n\r\n## Что изменилось, с изображениями {: .paragraph }\r\n### Боковое меню {: .paragraph }\r\nВот такое боковое меню было до, оно было справо и было не интерактивным.\r\n{: .text }\r\n\r\n![Боковое меню сайта | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SideMenuBefore.png\"}\r\n\r\nИ таким оно стало. Теперь оно интерактивное и слева\r\n{: .text }\r\n\r\n![Боковое меню сайта | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SideMenuAfter.png\"}\r\n\r\n### Футер {: .paragraph }\r\nФутер до\r\n{: .text }\r\n\r\n![Футер сайта до | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SiteFooterBefore.png\"}\r\n\r\nФутер стал чуть более вменяемым, как стало.\r\n{: .text }\r\n\r\n![Футер сайта после | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SiteFooterAfter.png\"}\r\n\r\n### Список статей {: .paragraph }\r\nСписок статей/постов ещё будет улучшаться. Я как минимум\r\nсобираюсь поменять бесконечный скроллинг на [пагинацию](/ru/td/pagination).\r\nИбо по моему мнению, она больше понятна для человека *(как минимум ты видишь \r\nсколько тебе осталось до конца)*\r\nДа и для **SEO** и внутренней перелинковки, она предпочтительней.\r\n{: .text .ref }\r\n\r\nКак было\r\n{: .text }\r\n\r\n![Список постов сайта до | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/PostListBefore.png\"}\r\n\r\nКак стало\r\n{: .text }\r\n\r\n![Список постов сайта после | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/PostListAfter.png\"}", "body_en": "## List of changes {: .paragraph }\r\nSo what exactly was changed for a website ?\r\n{ .text }\r\n\r\n* Now images are loading dynamically, only when they are visible.\r\n{: .list_el }\r\n* The layout and structure of the site has changed.\r\n{: .list_el }\r\n* Two other fonts have been added, for emphasis and for headings.\r\n{: .list_el }\r\n* A strict color palette for the site was selected and built in.\r\n{: .list_el }\r\n* Solves the problem with text size.\r\n{: .list_el }\r\n* All images are now in **webp** or **svg** format\r\n{: .list_el }\r\n* For the production server, all **JS** and **CSS** files are minified\r\n{: .list_el }\r\n* Changed display of the list of posts and their previews\r\n{: .list_el }\r\n\r\nAnd a much more... For example, change the button click animation\r\nor fix the translation.\r\n{: .text }\r\n\r\n## Overall website changes {: .paragraph }\r\n### Side menu {: .paragraph }\r\nThis is the side menu before, back then it was on the right side and was not interactive.\r\n{: .text }\r\n\r\n![Side menu of website | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SideMenuBefore.png\"}\r\n\r\n\r\nAnd that's how it looks now. Now it's interactive and on the left side\r\n{: .text }\r\n\r\n![Side menu of website | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SideMenuAfter.png\"}\r\n\r\n### Footer {: .paragraph }\r\nFooter before\r\n{: .text }\r\n\r\n![Footer of website before | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SiteFooterBefore.png\"}\r\n\r\nThe footer became a little more sane, footer after\r\n{: .text }\r\n\r\n![Footer of website after | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/SiteFooterAfter.png\"}\r\n\r\n### List of articles {: .paragraph }\r\nThe list of articles/posts will continue to improve. At least I'm going to replace infinite scrolling to [pagination](/en/td/pagination).\r\nBecause, in my opinion, it is more understandable for a person *(at least you see\r\nhow long do you have left until the end)*\r\nAnd for **SEO** and internal linking, it is preferable.\r\n{: .text .ref }\r\n\r\nBefore\r\n{: .text }\r\n\r\n![List of posts before | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/PostListBefore.png\"}\r\n\r\nAfter\r\n{: .text }\r\n\r\n![List of posts after | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/news/rethinking-website-design/PostListAfter.png\"}", "ending": "## Заключение {: .paragraph }\r\n\r\nКак  я уже понял, иметь свой сайт значит постоянно следить за ним и постояно улучшать.\r\nПоэтому, то как ты сконструировал сайт и как управляешь им очень многое решает. Изменения\r\nмогут пройти легко и незаметно а могут, растянуться в долгие и мучительные потуги спасти хоть что-нибудь.\r\n{ .text }\r\n\r\nПоэтому десять раз подумайте прежде чем встраивать ту или иную фичу на сайт.\r\n{ .text }", "ending_ru": "## Заключение {: .paragraph }\r\n\r\nКак  я уже понял, иметь свой сайт значит постоянно следить за ним и постояно улучшать.\r\nПоэтому, то как ты сконструировал сайт и как управляешь им очень многое решает. Изменения\r\nмогут пройти легко и незаметно а могут, растянуться в долгие и мучительные потуги спасти хоть что-нибудь.\r\n{ .text }\r\n\r\nПоэтому десять раз подумайте прежде чем встраивать ту или иную фичу на сайт.\r\n{ .text }", "ending_en": "## Conclusion {: .paragraph }\r\nAs I already understood, if you have your own website, this means that you have to constantly watch and improve it. And that's why your website's structure is vital.Upgrading a website can be easy or can become a nightmare.\r\n{ .text }\r\n\r\nSo, because of this, think ten times before embedding a new feature on your website.\r\n{ .text }", "preview": "news/rethinking-website-design/super_new_design_rethinking.webp", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/news.html"}}, {"model": "Post.case", "pk": 8, "fields": {"title": "Как я делал систему авторизации и регистрации пользователей на Django", "title_ru": "Как я делал систему авторизации и регистрации пользователей на Django", "title_en": "How I implemented login and registration forms using Django", "subtitle": "Или почему стоит читать документацию", "subtitle_ru": "Или почему стоит читать документацию", "subtitle_en": "This is why you should read a documentation", "description": "Не прочитав документацию по Django я переизобрёл колесо. Причём, квадратное. В Django уже\r\nесть всё необходимое для создания аутентификации пользователей. Наглядный тому пример админка Django по умолчанию.", "description_ru": "Не прочитав документацию по Django я переизобрёл колесо. Причём, квадратное. В Django уже\r\nесть всё необходимое для создания аутентификации пользователей. Наглядный тому пример админка Django по умолчанию.", "description_en": "Without reading the Django documentation, I reinvented the wheel. Moreover, it is square. The Django framework has everything you need to create user authentication. A good example of this is the default Django admin panel.", "resume": "Мне нужна была [аутентификация](/ru/td/authentication) пользователей на мой сайт. Не спрашивайте почему, просто нужна. И зная основные принципы работы аутентификации и авторизации на сайтах я решил что с лёгкостью добавлю пользовательские аккаунты на сайт.\r\n{: .text .ref }\r\n\r\nЧто я, в общем-то, с успехом и сделал.\r\n{: .text }\r\n\r\nНо загвоздка в том, что Django уже имел всё необходимое для решения моих задач. Нужно было просто знать об этом. Но я не знал. И так я пере изобрёл колесо, да только оно квадратное.\r\n{: .text }", "resume_ru": "Мне нужна была [аутентификация](/ru/td/authentication) пользователей на мой сайт. Не спрашивайте почему, просто нужна. И зная основные принципы работы аутентификации и авторизации на сайтах я решил что с лёгкостью добавлю пользовательские аккаунты на сайт.\r\n{: .text .ref }\r\n\r\nЧто я, в общем-то, с успехом и сделал.\r\n{: .text }\r\n\r\nНо загвоздка в том, что Django уже имел всё необходимое для решения моих задач. Нужно было просто знать об этом. Но я не знал. И так я пере изобрёл колесо, да только оно квадратное.\r\n{: .text }", "resume_en": "I was needed [authentication](/en/td/authentication) system on my website. Do not ask me why, I just need it. I knew basic principals of session-based authentication system and user authorizations. And I decided, to myself that it will be easy to make that system on my website.\r\n{: .text .ref }\r\n\r\nHonestly speaking, I did it.\r\n{: .text }\r\n\r\nBut the thing is that Django already has everything I need for solving my problems. I just needed to know about this features. But I did not. At the end I did invent a wheel again, but it is squared one.\r\n{: .text }", "client_name": "", "client_name_ru": null, "client_name_en": null, "client_description": "", "client_description_ru": "", "client_description_en": "", "goals": "Учитывая тот факт, что лишь малая часть посетителей захочет зарегистрироватья, я хотел сделать \r\nмаксимально простую систему регистрации пользователей. Поэтому в ней нет ни капчи, ни потверждения почты пользователя.\r\n{: .text }\r\n\r\nТак же, я не знал как можно было бы сделать так, чтобы пользователь смог бы отпавить своё изображение на сервер. До той поры я передавал всё в JSON формате. А это только строки и цифры. Короче, нужно было разобраться.\r\n{: .text }", "goals_ru": "Учитывая тот факт, что лишь малая часть посетителей захочет зарегистрироватья, я хотел сделать \r\nмаксимально простую систему регистрации пользователей. Поэтому в ней нет ни капчи, ни потверждения почты пользователя.\r\n{: .text }\r\n\r\nТак же, я не знал как можно было бы сделать так, чтобы пользователь смог бы отпавить своё изображение на сервер. До той поры я передавал всё в JSON формате. А это только строки и цифры. Короче, нужно было разобраться.\r\n{: .text }", "goals_en": "Considering the fact that, only small part would to sign up, I would to make as simple as possible authentication system. This is why it does not have neither captcha  nor email validation.\r\n{: .text }\r\n\r\nAlso I did not know, the possible way to recieve an image from user and apply it on server side of the website. Back then, all I send and recieve was either strings or numbers.\r\nLong story short, I would love to figure it out.\r\n{: .text }", "solution": "Моя система аутентификации построена на обычных **Django** моделях. Модель я назвал **User** *(Как очевидно)* и добавил к ней поля которые вы бы могли ожидать.\r\n{: .text }\r\n\r\n* имя пользователя\r\n{: .list_el }\r\n* почта\r\n{: .list_el }\r\n* пароль\r\n{: .list_el }\r\n* аватар\r\n{: .list_el }\r\n* об пользователе\r\n{: .list_el }\r\n\r\nИз-за того что я решил сделать модель для пользователей сам, мне пришлось писать \r\nвсе проверки в ручную и думать об возможных проблемах с валидацией данных\r\n{: .text }\r\n\r\nПосле того как проблемы с валидацией регистрации и авторизации пользователя я решил, \r\nпришло время применить всё то что я сделал и показать пользователю что он зарегистрирован и/*или* авторизирован.\r\n{: .text }\r\n\r\nДля этого я добавил справа вверху иконку пользователя *(если он её, конечно, добавлял)*.\r\nА также добавил **profile** страницу, где бы пользователь смог бы посмотреть и ознакомиться со своим профилем.\r\n{: .text }", "solution_ru": "Моя система аутентификации построена на обычных **Django** моделях. Модель я назвал **User** *(Как очевидно)* и добавил к ней поля которые вы бы могли ожидать.\r\n{: .text }\r\n\r\n* имя пользователя\r\n{: .list_el }\r\n* почта\r\n{: .list_el }\r\n* пароль\r\n{: .list_el }\r\n* аватар\r\n{: .list_el }\r\n* об пользователе\r\n{: .list_el }\r\n\r\nИз-за того что я решил сделать модель для пользователей сам, мне пришлось писать \r\nвсе проверки в ручную и думать об возможных проблемах с валидацией данных\r\n{: .text }\r\n\r\nПосле того как проблемы с валидацией регистрации и авторизации пользователя я решил, \r\nпришло время применить всё то что я сделал и показать пользователю что он зарегистрирован и/*или* авторизирован.\r\n{: .text }\r\n\r\nДля этого я добавил справа вверху иконку пользователя *(если он её, конечно, добавлял)*.\r\nА также добавил **profile** страницу, где бы пользователь смог бы посмотреть и ознакомиться со своим профилем.\r\n{: .text }", "solution_en": "My authentication system build upon a usual **Django** models. I named that model **User** *(So obvious)* and added some fields to that model, there are:\r\n{: .text }\r\n\r\n* user name\r\n{: .list_el }\r\n* email\r\n{: .list_el }\r\n* password\r\n{: .list_el }\r\n* avatar\r\n{: .list_el }\r\n* about user\r\n{: .list_el }\r\n\r\nBecause of my decision to make model for authentication system  by myself, I had to write down all checks and validation code by hand. And I've spend hours to thinking about all the possible ways to break my validation.\r\n\r\nAfter I solved the problems with validating user registration and authorization,\r\nIt's time to apply everything I did and show to user that he is registered and/*or* authorized.\r\n{: .text }\r\n\r\nTo do this, I added a user icon at the top right *(if he has added icon, of course)*.\r\nI also added a **profile** page where the user could view and get acquainted with his profile.\r\n{: .text }", "result": "Задачу в создании простой системы авторизации я выполнил. Так же узнал как можно отправлять изображения на сервер через **AJAX** запросы. Это была моя вторая задача.\r\n{: .text }\r\n\r\nНо, знай я, что **Django** имеет встроенную возможность для имплементации авторизации с регистрацией, всё было бы гораздо проще. *Да и быстрее.*  \r\n{: .text }\r\n\r\nЯ более чем уверен, что так или иначе перепишу **Django** приложение для авторизации пользователей.\r\n{: .text }", "result_ru": "Задачу в создании простой системы авторизации я выполнил. Так же узнал как можно отправлять изображения на сервер через **AJAX** запросы. Это была моя вторая задача.\r\n{: .text }\r\n\r\nНо, знай я, что **Django** имеет встроенную возможность для имплементации авторизации с регистрацией, всё было бы гораздо проще. *Да и быстрее.*  \r\n{: .text }\r\n\r\nЯ более чем уверен, что так или иначе перепишу **Django** приложение для авторизации пользователей.\r\n{: .text }", "result_en": "My first goal was to make simple authorization system. Done \r\n{: .text }\r\n\r\nThe second goal was to figure out how to send images to server via forms, using **AJAX** requests. Done\r\n{: .text }\r\n\r\nI'm very sorry for a reason that I didn't know about build-in feature for user registration and managing. At least I didn't know that this feature is working without **Django** admin panel.\r\n{: .text }\r\n\r\nBut, I'm confident about my decision to rewrite my **User** Django app in a way that this will be integrated into Django's default **Users model**.\r\n{: .text }", "preview": "", "additional": "", "additional_ru": "", "additional_en": "", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/case.html"}}, {"model": "Post.case", "pk": 9, "fields": {"title": "Два вида комментирования в одном", "title_ru": "Два вида комментирования в одном", "title_en": "Two types of commenting system in one", "subtitle": "Как я комменты добавлял на сайт", "subtitle_ru": "Как я комменты добавлял на сайт", "subtitle_en": "How I added comments on my website", "description": "Учитывая специфику \"типичного комментатора\" я постарался сделать комментирование на моём \r\nсайте максимально доступным и простым. Как говорится без регистрации и смс :)", "description_ru": "Учитывая специфику \"типичного комментатора\" я постарался сделать комментирование на моём \r\nсайте максимально доступным и простым. Как говорится без регистрации и смс :)", "description_en": "Taking into account the specifics of a “typical commentator”, I tried to make commenting system on my website as accessible and simple as possible. As they say, without registration and SMS :)", "resume": "Учитывая специфику *\"типичного комментатора\"* я постарался сделать комментирование на моём сайте максимально доступным и простым. Так же нужно было добавить в эту систему комментирования уже зарегистрированных пользователей, что я собственно и сделал. \r\n{: .text }\r\n\r\nГрубо говоря вся сложность состояла в том, чтобы учитывать как анонимных комментаторов, так и зарегистрированных.\r\n{: .text }", "resume_ru": "Учитывая специфику *\"типичного комментатора\"* я постарался сделать комментирование на моём сайте максимально доступным и простым. Так же нужно было добавить в эту систему комментирования уже зарегистрированных пользователей, что я собственно и сделал. \r\n{: .text }\r\n\r\nГрубо говоря вся сложность состояла в том, чтобы учитывать как анонимных комментаторов, так и зарегистрированных.\r\n{: .text }", "resume_en": "Considering the specifics of the *\"typical commentator\"* I tried to make commenting on my site as accessible and simple as possible. It was also necessary to add already registered users to this commenting system, which I actually did.\r\n{: .text }\r\n\r\nRoughly speaking, the hard part was to take into account both anonymous commentators and registered ones. As if there is no difference in commenting for both of them.\r\n{: .text }", "client_name": "", "client_name_ru": null, "client_name_en": null, "client_description": "", "client_description_ru": "", "client_description_en": "", "goals": "Можно выделить 5 целей:\r\n{: .text }\r\n\r\n* Реализовать модель пользователя\r\n{: .list_el }\r\n* Реализовать модель [комментария](/ru/td/comment/)\r\n{: .list_el .ref }\r\n* Создать комментирование для анонимусов\r\n{: .list_el }\r\n* Создать комментирования для зарегистрированных\r\n{: .list_el }\r\n* Объединить и тех и других под одной моделью и одной формой отправки.\r\n{: .list_el }", "goals_ru": "Можно выделить 5 целей:\r\n{: .text }\r\n\r\n* Реализовать модель пользователя\r\n{: .list_el }\r\n* Реализовать модель [комментария](/ru/td/comment/)\r\n{: .list_el .ref }\r\n* Создать комментирование для анонимусов\r\n{: .list_el }\r\n* Создать комментирования для зарегистрированных\r\n{: .list_el }\r\n* Объединить и тех и других под одной моделью и одной формой отправки.\r\n{: .list_el }", "goals_en": "There are 5 goals:\r\n{: .text }\r\n\r\n* Implement a user model\r\n{: .list_el }\r\n* Implement [comment](/en/td/comment) model\r\n{: .list_el .ref }\r\n* Create commenting form for anonymous users\r\n{: .list_el }\r\n* Create commenting form for registered ones\r\n{: .list_el }\r\n* Combine both of them under one model and one submission form.\r\n{: .list_el }", "solution": "### Пользовательская модель {: .paragraph }\r\nНачнём с самого простого. С пользователя. Его [модель](/ru/td/django-model) у меня уже была, со времён реализации системы [аутентификации](/ru/td/authentication). Поэтому, не буду тут останавливаться.\r\n{: .text .ref }\r\n\r\n### Модель комментария {: .paragraph }\r\nДальше идёт модель комментария. С ним далеко не всё просто. Чтобы следить за тем, кто оставил комментарий, пришлось  добавить два айдишника. Один для анонимуса, другой для зарегистрированного пользователя\r\n{: .text }\r\n\r\nТак же я добавил дополнительное поле, **ManyToManyField**. И оно указывало на саму модель комментария. В будущем я планирую добавить возможность отвечать на комментарии. Но это в будущем. А пока идём дальше.\r\n{: .text }\r\n\r\n### Комментирование для анонимусов {: .paragraph }\r\nКомментирование для анонимусов пришлось немного ограничить иначе спама не избежать. Они, да и зарегистрированные пользователи могут отправить комментарий не чаще чем 1 раз в минуту.\r\n{: .text }\r\n\r\n![Пример комментария | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/two-types-of-commenting-system-in-one/commentingAnon.png\"}\r\n\r\n\r\nТакже, перед отправкой комментария у анонимуса спаршивается его имя. Это для того, чтобы можно было понять кто оставил комментарий.\r\n{: .text }\r\n\r\n![Пример комментария с потверждением имени | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/two-types-of-commenting-system-in-one/commentingAnonWithName.png\"}\r\n\r\n### Совместное комментированние {: .paragraph }\r\nДля зарегистрированных пользователей ничего не требуется. Просто бери и оставляй комментарий\r\n{: .text }\r\n\r\nОбъединить и тех и других под одной формой не составило особого труда. Немного *джаваскрипта* и шаблонной магии **Django**. И вот, мы уже имеет работающую систему комментирования.\r\n{: .text }", "solution_ru": "### Пользовательская модель {: .paragraph }\r\nНачнём с самого простого. С пользователя. Его [модель](/ru/td/django-model) у меня уже была, со времён реализации системы [аутентификации](/ru/td/authentication). Поэтому, не буду тут останавливаться.\r\n{: .text .ref }\r\n\r\n### Модель комментария {: .paragraph }\r\nДальше идёт модель комментария. С ним далеко не всё просто. Чтобы следить за тем, кто оставил комментарий, пришлось  добавить два айдишника. Один для анонимуса, другой для зарегистрированного пользователя\r\n{: .text }\r\n\r\nТак же я добавил дополнительное поле, **ManyToManyField**. И оно указывало на саму модель комментария. В будущем я планирую добавить возможность отвечать на комментарии. Но это в будущем. А пока идём дальше.\r\n{: .text }\r\n\r\n### Комментирование для анонимусов {: .paragraph }\r\nКомментирование для анонимусов пришлось немного ограничить иначе спама не избежать. Они, да и зарегистрированные пользователи могут отправить комментарий не чаще чем 1 раз в минуту.\r\n{: .text }\r\n\r\n![Пример комментария | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/two-types-of-commenting-system-in-one/commentingAnon.png\"}\r\n\r\n\r\nТакже, перед отправкой комментария у анонимуса спаршивается его имя. Это для того, чтобы можно было понять кто оставил комментарий.\r\n{: .text }\r\n\r\n![Пример комментария с потверждением имени | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/two-types-of-commenting-system-in-one/commentingAnonWithName.png\"}\r\n\r\n### Совместное комментированние {: .paragraph }\r\nДля зарегистрированных пользователей ничего не требуется. Просто бери и оставляй комментарий\r\n{: .text }\r\n\r\nОбъединить и тех и других под одной формой не составило особого труда. Немного *джаваскрипта* и шаблонной магии **Django**. И вот, мы уже имеет работающую систему комментирования.\r\n{: .text }", "solution_en": "### User model {: .paragraph }\r\nLet's start with the simplest goal. The **User** [model](/en/td/django-model). I already had a model of it, since the implementation of the [authentication](/en/td/authentication) system. Therefore, I will not cover this task.\r\n{: .text .ref }\r\n\r\n### Comment model {: .paragraph }\r\nNext comes the comment model. Not everything is simple with him. To keep track of who left the comment, I had to add two IDs. One for anonymous, one for registered user\r\n{: .text }\r\n\r\nI also added an additional field, **ManyToManyField**. And it pointed to the comment model itself. In the future I plan to add the ability to reply to other comments. But that's in the future. For now, let's move on.\r\n{: .text }\r\n\r\n### Commenting for anonymous {: .paragraph }\r\nCommenting for anonymous users had to be slightly limited, otherwise spam would be inevitable. They, and even registered users, can post a comment no more than once per minute.\r\n{: .text }\r\n\r\n![Comment example | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/two-types-of-commenting-system-in-one/commentingAnon.png\"}\r\n\r\nAlso, before posting a comment, the anonymous user is asked for his name. This is so that you can understand who left the comment.\r\n{: .text }\r\n\r\n![Comment example with name verification | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/two-types-of-commenting-system-in-one/commentingAnonWithName.png\"}\r\n\r\n### Collaborative commenting {: .paragraph }\r\nThere is no requirement for registered users. Just leave a comment\r\n{: .text }\r\n\r\nIt was not difficult to unite both of them under one form. A little *javascript* and **Django** template magic. And now, we already have a working commenting system.\r\n{: .text }", "result": "Хочется сказать, что в этом направлении есть куда расти. Возьмите хотя бы возможность оставлять комментарии через ваши соцсети или например оставлять картинки или гифки.\r\n{: .text }\r\n\r\nВообщем, я быстро сделал данное приложение для Django. Создал необходимый минимум. Наверное 8 дней мне потребовалось на него. Не больше.\r\n{: .text }\r\n\r\nПо итогу, все задачи были выполнены и теперь каждый сможет оставить свою подпись под тем или иным постом.\r\n{: .text }", "result_ru": "Хочется сказать, что в этом направлении есть куда расти. Возьмите хотя бы возможность оставлять комментарии через ваши соцсети или например оставлять картинки или гифки.\r\n{: .text }\r\n\r\nВообщем, я быстро сделал данное приложение для Django. Создал необходимый минимум. Наверное 8 дней мне потребовалось на него. Не больше.\r\n{: .text }\r\n\r\nПо итогу, все задачи были выполнены и теперь каждый сможет оставить свою подпись под тем или иным постом.\r\n{: .text }", "result_en": "I would like to say that there is room for growth in this direction. Take at least the opportunity to leave comments through your social networks or, for example, attach pictures or GIFs to comment.\r\n{: .text }\r\n\r\nIn general, I quickly made this application for Django. Created the required minimum. It probably took me 8 days to complete it. Not more.\r\n{: .text }\r\n\r\nAs a result, all the goals were completed and now everyone will be able to leave their signature under any post on my website. Isn't that amazing )\r\n{: .text }", "preview": "", "additional": "", "additional_ru": "", "additional_en": "", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/case.html"}}, {"model": "Post.case", "pk": 10, "fields": {"title": "Как я сделал своего первого бота для телеграм", "title_ru": "Как я сделал своего первого бота для телеграм", "title_en": "How I made my first Telegram bot", "subtitle": "И то, что стоит учесть на будущее", "subtitle_ru": "И то, что стоит учесть на будущее", "subtitle_en": "And what you should know before you start developing your own bot", "description": "Кейс про то, как я сделал телеграм бота. Используя python фреймворк aiogram. И про то, что \r\nследует учесть в следующий раз при создании бота для телеграм.", "description_ru": "Кейс про то, как я сделал телеграм бота. Используя python фреймворк aiogram. И про то, что \r\nследует учесть в следующий раз при создании бота для телеграм.", "description_en": "A case about the process of making my first Telegram bot using the Aiogram Python framework.And about the things you should consider when creating Telegram bots.", "resume": "Не буду лукавить. Это не прям первый [бот](/ru/td/telegram-bot), которого я сделал. Он скорее первый законченный и развёрнутый бот. А так, он будет где-то 11-м.\r\n{: .text .ref }\r\n\r\nВ принципе, никаких сложностей в создании данного бота у меня не возникло. Документация [aiogram](/ru/td/aiogram) понятная. Я бы сказал, исчерпывающая. Асинхронность не вызвала так много проблем, как я предполагал. А шаблон для отрисовки результатов, вообще моя любимая часть.\r\n{: .text .ref }\r\n\r\nЕдинственное с чем у меня возникли проблемы, так это перевод для англоязычных пользователей. Я слишком рано спохватился, а переписывать бота мне ой как не хотелось.\r\nПоэтому имеем, только русско язычного бота. Вот.", "resume_ru": "Не буду лукавить. Это не прям первый [бот](/ru/td/telegram-bot), которого я сделал. Он скорее первый законченный и развёрнутый бот. А так, он будет где-то 11-м.\r\n{: .text .ref }\r\n\r\nВ принципе, никаких сложностей в создании данного бота у меня не возникло. Документация [aiogram](/ru/td/aiogram) понятная. Я бы сказал, исчерпывающая. Асинхронность не вызвала так много проблем, как я предполагал. А шаблон для отрисовки результатов, вообще моя любимая часть.\r\n{: .text .ref }\r\n\r\nЕдинственное с чем у меня возникли проблемы, так это перевод для англоязычных пользователей. Я слишком рано спохватился, а переписывать бота мне ой как не хотелось.\r\nПоэтому имеем, только русско язычного бота. Вот.", "resume_en": "Let me be open for you. It is not my first [Telegram bot](/en/td/telegram-bot). To be more accurate, it is first finished and published for wide use. And if we are still talking about which position this bot has exactly, he will take 11th place.\r\n{: .text .ref }\r\n\r\nHonestly, there was no trouble at all when I was creating this bot. [Aiogram's](/en/td/aiogram) documentation is good. I would say exhaustive. Asynchronousness didn't cause as many problems as I expected. And the template for displaying results is my favorite part.\r\n{: .text .ref }\r\n\r\nThe only thing I've had trouble with is translation for English-speaking users. I caught up too early, and I didn't want to rewrite the bot completely from scratch. Therefore, we have only a Russian-language bot.\r\n{: .text }", "client_name": "", "client_name_ru": null, "client_name_en": null, "client_description": "", "client_description_ru": "", "client_description_en": "", "goals": "* Развернуть бота на [VPS](/ru/td/vps/)\r\n{: .list_el .ref }\r\n* Реализовать возможность изменения клавиатуры\r\n{: .list_el }\r\n* Реализовать шаблон, для отрисовки результатов опроса\r\n{: .list_el }", "goals_ru": "* Развернуть бота на [VPS](/ru/td/vps/)\r\n{: .list_el .ref }\r\n* Реализовать возможность изменения клавиатуры\r\n{: .list_el }\r\n* Реализовать шаблон, для отрисовки результатов опроса\r\n{: .list_el }", "goals_en": "* Deploy bot on [VPS](/en/td/vps/)\r\n{: .list_el .ref }\r\n* Implement changing the bot's answers dynamically.\r\n{: .list_el }\r\n* Implement a template for displaying quiz results.\r\n{: .list_el }", "solution": "### Динамические сообщения ботов {: .paragraph }\r\nПосле реализации последовательной логики бота *( вопросы задаются по очереди )*, я приступил к реализации динамического изменения клавиатуры, при выборе формата отображения данных *(в процентах либо в абсолютных числах)*\r\n{: .text }\r\n\r\n![inline кнопка для настроек | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/dynamicMessage.png\"}\r\n\r\nПорывшись в документации **aiogram,** я нашёл нужный мне метод ... И собственно решил одну из поставленных задач.\r\n{: .text }\r\n\r\n### Шаблон результата {: .paragraph }\r\nДальше, я написал обычный текстовый файл. И добавил **маркеров** *(это специальные слова за которые я бы смог зацепиться во время генерирования результатов)*\r\n{: .text }\r\n\r\n![текст с маркерами для python | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/template.png\"}\r\n\r\n\r\n![шаблон для результатов опроса ботом | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/templateResult.png\"}\r\n\r\n\r\n### Развёртывание бота на VPS {: .paragraph }\r\nРазвёртывание ботов, для меня вообще было впервые. Поэтому хотелось бы поблагодарить автора [данной статьи и сайта](https://ramziv.com/article/38). За то что, направил меня в верном направлении.\r\n{: .text .ref }\r\n\r\nЧёрт, я уж собирался на своём ноуте его постоянно запускать :)\r\n{: .text }\r\n\r\nСуть данного решения в том, что  ты арендуешь виртуальных хостинг. \r\n{: .text }\r\n\r\nСоздаёшь скрипт и демона ( процесса, который бы автоматически запускал бота при перезагрузке сервера )\r\n{: .text }\r\n\r\nЗапускаешь и забываешь. Пока не потребуется внести правки в работу бот. *( Его нужно будет перезагрузить лично, чтобы изменения вступили в силу)*\r\n{: .text }\r\n\r\n### Переводы {: .paragraph }\r\nТеперь к переводам. Я решил использовать уже знакомый мне **python** [пакет для генерации файлов переводов](https://babel.pocoo.org/en/latest/). Такой же пакет для интернационализации использует **django.**\r\n{: .text }\r\n\r\nНо после дня попыток перевести все строчки **( частичного перевода мне удалось достигнуть),** \r\nя сдался и опубликовал бота не интернационализированным. Позор мне, короче. \r\n{: .text }\r\n\r\nПросто надо будет выделить свободное время и разобраться со всеми нюансами.\r\n{: .text }", "solution_ru": "### Динамические сообщения ботов {: .paragraph }\r\nПосле реализации последовательной логики бота *( вопросы задаются по очереди )*, я приступил к реализации динамического изменения клавиатуры, при выборе формата отображения данных *(в процентах либо в абсолютных числах)*\r\n{: .text }\r\n\r\n![inline кнопка для настроек | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/dynamicMessage.png\"}\r\n\r\nПорывшись в документации **aiogram,** я нашёл нужный мне метод ... И собственно решил одну из поставленных задач.\r\n{: .text }\r\n\r\n### Шаблон результата {: .paragraph }\r\nДальше, я написал обычный текстовый файл. И добавил **маркеров** *(это специальные слова за которые я бы смог зацепиться во время генерирования результатов)*\r\n{: .text }\r\n\r\n![текст с маркерами для python | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/template.png\"}\r\n\r\n\r\n![шаблон для результатов опроса ботом | Тим зе вебмастер](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/templateResult.png\"}\r\n\r\n\r\n### Развёртывание бота на VPS {: .paragraph }\r\nРазвёртывание ботов, для меня вообще было впервые. Поэтому хотелось бы поблагодарить автора [данной статьи и сайта](https://ramziv.com/article/38). За то что, направил меня в верном направлении.\r\n{: .text .ref }\r\n\r\nЧёрт, я уж собирался на своём ноуте его постоянно запускать :)\r\n{: .text }\r\n\r\nСуть данного решения в том, что  ты арендуешь виртуальных хостинг. \r\n{: .text }\r\n\r\nСоздаёшь скрипт и демона ( процесса, который бы автоматически запускал бота при перезагрузке сервера )\r\n{: .text }\r\n\r\nЗапускаешь и забываешь. Пока не потребуется внести правки в работу бот. *( Его нужно будет перезагрузить лично, чтобы изменения вступили в силу)*\r\n{: .text }\r\n\r\n### Переводы {: .paragraph }\r\nТеперь к переводам. Я решил использовать уже знакомый мне **python** [пакет для генерации файлов переводов](https://babel.pocoo.org/en/latest/). Такой же пакет для интернационализации использует **django.**\r\n{: .text }\r\n\r\nНо после дня попыток перевести все строчки **( частичного перевода мне удалось достигнуть),** \r\nя сдался и опубликовал бота не интернационализированным. Позор мне, короче. \r\n{: .text }\r\n\r\nПросто надо будет выделить свободное время и разобраться со всеми нюансами.\r\n{: .text }", "solution_en": "### Dynamic bot's messages {: .paragraph }\r\nAfter implementing the sequential logic of the bot *( questions are asked one by one )*, I started to implement the dynamic change of the bot's answers when choosing the format of the data display *(in percent or in absolute numbers).*\r\n{: .text}\r\n\r\n![inlineKeyboardButton for settings | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/dynamicMessage.png\"}\r\n\r\nWhile diving into the **aiogram's** documentation, I found the method I needed. And I actually solved one of the tasks.\r\n{: .text}\r\n\r\n### Result template {: .paragraph }\r\nNext, I wrote a normal text file. And I added **markers** *(these are special words that I could stick to when generating results)*.\r\n{: .text}\r\n\r\n![Text wit markers for python | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/template.png\"}\r\n\r\n![Template for result displaying by bot | Tim the webmaster](/static/placeholder.svg){: .image .image-bordered .dynamic_image data-src=\"/media/cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/templateResult.png\"}\r\n\r\n### Deploying bot on VPS {: .paragraph }\r\nIt was my first time deploying bots. I would therefore like to thank the author [for this article and the website](https://ramziv.com/article/38). He showed me the right way to do this.\r\n{: .text .ref }\r\n\r\nThe essence of this decision is that you rent virtual hosting. \r\n{: .text}\r\n\r\nCreate a script and a **deamon** (a process that would automatically run the bot when the server restarts).\r\n{: .text}\r\n\r\nYou start and forget. The bot will not need to be modified yet. *(It will need to be reloaded personally before the changes come into effect.)*\r\n{: .text}\r\n\r\n### Translation {: .paragraph }\r\nNow to the translations. I decided to use my familiar **Python** [package to generate translation files](https://babel.pocoo.org/en/latest/). The same package for internationalization is used by **Django**.\r\n{: .text}\r\n\r\nBut after a day of trying to translate all the lines **(partial translation I managed to do)**, I gave up and published the bot not internationalized. Shame on me.\r\n{: .text}\r\n\r\nYou just need to allocate free time and deal with all the nuances.\r\n{: .text}", "result": "Все поставленные задачи я выполнил, не считая интернационализации.\r\n{: .text }\r\n\r\nА результат ты можешь проверить сам введя *TimQuizzer* в телеграм.\r\n{: .text }\r\n\r\nИли по ссылке в браузере: [https://t.me/TimQuizzerBot](https://t.me/TimQuizzerBot)\r\n{: .text .ref }", "result_ru": "Все поставленные задачи я выполнил, не считая интернационализации.\r\n{: .text }\r\n\r\nА результат ты можешь проверить сам введя *TimQuizzer* в телеграм.\r\n{: .text }\r\n\r\nИли по ссылке в браузере: [https://t.me/TimQuizzerBot](https://t.me/TimQuizzerBot)\r\n{: .text .ref }", "result_en": "All existing tasks I've completed, excluding internationalization\r\n{: .text }\r\n\r\nAnd the results you can check for yourself by entering *TimQuizzer* in the telegram search field.\r\n{: .text }\r\n\r\nOr by a link in the browser: [https://t.me/TimQuizzerBot](https://t.me/TimQuizzerBot)\r\n{: .text .ref }", "preview": "cases/quizbot-or-questionnaire-bot-for-telegram-using-python-aiogram/telegram_puzzle.webp", "additional": "", "additional_ru": "", "additional_en": "", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/case.html"}}, {"model": "Post.qa", "pk": 12, "fields": {"question": "Чем ты занимался до того как стал вебмастером ?", "question_ru": "Чем ты занимался до того как стал вебмастером ?", "question_en": "What did you do before becoming a webmaster?", "description": "Я делал игры и писал свой собственный игровой движок. Игр сделал 5 и лишь одну выпустил в Play Store. А движок назывался DI. Я его забросил", "description_ru": "Я делал игры и писал свой собственный игровой движок. Игр сделал 5 и лишь одну выпустил в Play Store. А движок назывался DI. Я его забросил", "description_en": "I made games and wrote my own game engine. I made 5 games and released only one on the Play Store. And the engine was called DI. I abandoned it", "answer": "Я делал игры и писал свой собственный игровой движок. Игр сделал 5 и лишь одну выпустил в **Play Store.** А движок назывался **DI**. \r\n{: .text }\r\n\r\nЯ его забросил\r\n{: .text }", "answer_ru": "Я делал игры и писал свой собственный игровой движок. Игр сделал 5 и лишь одну выпустил в **Play Store.** А движок назывался **DI**. \r\n{: .text }\r\n\r\nЯ его забросил\r\n{: .text }", "answer_en": "I made games and wrote my own game engine. I made 5 games and released only one on the **Play Store.** And the engine was called **DI.** \r\n{: .text }\r\n\r\nI abandoned it\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.qa", "pk": 13, "fields": {"question": "Почему выбрал aiogram для создания ботов ?", "question_ru": "Почему выбрал aiogram для создания ботов ?", "question_en": "Why did you choose aiogram to create bots?", "description": "Он быстрый и абсолютно ассинхронный. Мне понравилась его документация (хотя она типовая).", "description_ru": "Он быстрый и абсолютно ассинхронный. Мне понравилась его документация (хотя она типовая).", "description_en": "It is fast and completely asynchronous. I liked its documentation (although it is generic).", "answer": "Он **быстрый** и абсолютно **ассинхронный**. Мне понравилась его документация *(хотя она типовая).*\r\n{: .text }", "answer_ru": "Он **быстрый** и абсолютно **ассинхронный**. Мне понравилась его документация *(хотя она типовая).*\r\n{: .text }", "answer_en": "It is **fast** and completely **asynchronous.** I liked its documentation *(although it is generic).*\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.qa", "pk": 14, "fields": {"question": "Почему, создавая сайт ты предпочёл django, а не конструкторы сайтов ?", "question_ru": "Почему, создавая сайт ты предпочёл django, а не конструкторы сайтов ?", "question_en": "Why did you choose django over website builders ?", "description": "Я люблю, когда у меня всё под контролем и я могу влиять на каждый этап жизни сайта.\r\nНачиная от бэкенда, заканчивая созданием статей для этого же сайта.", "description_ru": "Я люблю, когда у меня всё под контролем и я могу влиять на каждый этап жизни сайта.\r\nНачиная от бэкенда, заканчивая созданием статей для этого же сайта.", "description_en": "I love it when I have everything under control and can influence every stage of the site's life.\r\nStarting from the backend, ending with the creation of articles for the same site.", "answer": "Довольно сложный вопрос. Наверное я люблю разбираться и копаться в сложных вещах, хотя вроде бы и не стоило. \r\n{: .text }\r\n\r\nТут похожая история с играми. \r\n{: .text }\r\n\r\nВместо того, чтобы делать игры на игровых движках, я делал свой собственный, **DI**. \r\n{: .text }\r\n\r\nНу, я просто не ищу простых путей ;)\r\n{: .text }", "answer_ru": "Довольно сложный вопрос. Наверное я люблю разбираться и копаться в сложных вещах, хотя вроде бы и не стоило. \r\n{: .text }\r\n\r\nТут похожая история с играми. \r\n{: .text }\r\n\r\nВместо того, чтобы делать игры на игровых движках, я делал свой собственный, **DI**. \r\n{: .text }\r\n\r\nНу, я просто не ищу простых путей ;)\r\n{: .text }", "answer_en": "Quite a difficult question. I guess I like to understand and delve into complex things, although it seems that it’s not worth it.\r\n{: .text }\r\n\r\nIt's a similar story with game development.\r\n{: .text }\r\n\r\nInstead of making games using game engines, I made my own, **DI**.\r\n{: .text }\r\n\r\nWell, I'm just not looking for easy ways ;)\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.qa", "pk": 15, "fields": {"question": "Кто рисует всю графику для сайта ?", "question_ru": "Кто рисует всю графику для сайта ?", "question_en": "Who draws all the graphics for the site?", "description": "Это я всё рисую. Тут всё просто. Это мой вебсайт и всё тут должно быть 'от меня', так сказать. Поэтому и рисую я, для себя сам.", "description_ru": "Это я всё рисую. Тут всё просто. Это мой вебсайт и всё тут должно быть 'от меня', так сказать. Поэтому и рисую я, для себя сам.", "description_en": "I'm a painter. Everything is simple here. This is my website and everything here should be 'from me', so to speak. That's why I draw, for myself.", "answer": "Это я всё рисую. Тут всё просто. Это мой вебсайт и всё тут должно быть *'от меня'*, так сказать. Поэтому и рисую я, для себя сам.\r\n{: .text }", "answer_ru": "Это я всё рисую. Тут всё просто. Это мой вебсайт и всё тут должно быть *'от меня'*, так сказать. Поэтому и рисую я, для себя сам.\r\n{: .text }", "answer_en": "That's it, I'm drawing. Everything is simple here. This is my website and everything here should be *'from me'*, so to speak. That's why I draw, for myself.\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.qa", "pk": 16, "fields": {"question": "Каким хостинг провайдером пользуешься ?", "question_ru": "Каким хостинг провайдером пользуешься ?", "question_en": "What hosting provider do you use?", "description": "На данный момент я пользуюсь beget-ом. Пока меня всё устраивает.", "description_ru": "На данный момент я пользуюсь beget-ом. Пока меня всё устраивает.", "description_en": "At the moment I am using beget. So far I'm happy with everything.", "answer": "На данный момент я пользуюсь *beget-ом*. Пока меня всё устраивает.\r\n{: .text }", "answer_ru": "На данный момент я пользуюсь *beget-ом*. Пока меня всё устраивает.\r\n{: .text }", "answer_en": "At the moment I am using *beget*. So far I'm happy with everything.\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.qa", "pk": 17, "fields": {"question": "Ты предлагаешь SEO услуги ?", "question_ru": "Ты предлагаешь SEO услуги ?", "question_en": "Do you offer SEO services?", "description": "Нет. Пока нет. Понимаете ли, продвижение сайтов это долгий процесс да и опыта у меня не столь много в продвижении. 2 сайта всего.", "description_ru": "Нет. Пока нет. Понимаете ли, продвижение сайтов это долгий процесс да и опыта у меня не столь много в продвижении. 2 сайта всего.", "description_en": "No. Not yet. You see, website promotion is a long process, and I don’t have much experience in promotion. 2 sites in total.", "answer": "Нет. Пока нет. Понимаете ли, продвижение сайтов это долгий процесс да и опыта у меня не столь много в продвижении. 2 сайта всего. \r\n{: .text }\r\n\r\nДа даже если бы и опыт был более значительным, не думаю что я стану предлагать комплексные услуги по продвижению сайтов. Возможно какие-нибуль измеримые работы и услуги. По типу *гостевого постинга* или *заработок ссылок.*\r\n{: .text }", "answer_ru": "Нет. Пока нет. Понимаете ли, продвижение сайтов это долгий процесс да и опыта у меня не столь много в продвижении. 2 сайта всего. \r\n{: .text }\r\n\r\nДа даже если бы и опыт был более значительным, не думаю что я стану предлагать комплексные услуги по продвижению сайтов. Возможно какие-нибуль измеримые работы и услуги. По типу *гостевого постинга* или *заработок ссылок.*\r\n{: .text }", "answer_en": "No. Not yet. You see, website promotion is a long process, and I don’t have much experience in promotion. 2 sites in total.\r\n{: .text }\r\n\r\nEven if my experience was more significant, I don’t think that I would offer comprehensive services for website promotion. Perhaps some measurable work and services. By type of *guest posting* or *earning links.*\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.qa", "pk": 18, "fields": {"question": "Почему бросил писать игры ?", "question_ru": "Почему бросил писать игры ?", "question_en": "Why did you quit  game development ?", "description": "Я бросил делать игры потому что это долго и нудно. И очень одиноко. И ещё, я не хотел пахать по 15 часов в день чтобы сделать какую-нибудь прибабаху для игры. Я жить ещё хочу :)", "description_ru": "Я бросил делать игры потому что это долго и нудно. И очень одиноко. И ещё, я не хотел пахать по 15 часов в день чтобы сделать какую-нибудь прибабаху для игры. Я жить ещё хочу :)", "description_en": "I quit making games because it was long and tedious. And very lonely. And yet, I didn’t want to work 15 hours a day to make some kind of feature for the game. I still want to have some kind of personal live :)", "answer": "Я бросил делать игры потому что это долго и нудно. И очень одиноко. И ещё, я не хотел пахать по 15 часов в день чтобы сделать какую-нибудь прибабаху для игры. Я жить ещё хочу :)\r\n{: .text }", "answer_ru": "Я бросил делать игры потому что это долго и нудно. И очень одиноко. И ещё, я не хотел пахать по 15 часов в день чтобы сделать какую-нибудь прибабаху для игры. Я жить ещё хочу :)\r\n{: .text }", "answer_en": "I quit making games because it was long and tedious. And very lonely. And yet, I didn’t want to work 15 hours a day to make some kind of feature for the game. I still want to have some kind of personal live :)\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html"}}, {"model": "Post.td", "pk": 19, "fields": {"termin": "Телеграм бот", "termin_ru": "Телеграм бот", "termin_en": "Telegram bot", "description": "Это программа, которая ипользуя API телеграма может выполнять различные действия в чатах без человека.", "description_ru": "Это программа, которая ипользуя API телеграма может выполнять различные действия в чатах без человека.", "description_en": "This is a program that, using the Telegram API, can perform various actions in chats without a person.", "definition": "Это программа, которая используя **API** телеграма может выполнять различные действия в чатах без человека.", "definition_ru": "Это программа, которая используя **API** телеграма может выполнять различные действия в чатах без человека.", "definition_en": "This is a program that, using the Telegram **API**, can perform various actions in chats without a person.", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 20, "fields": {"termin": "aiogram", "termin_ru": "aiogram", "termin_en": "aiogram", "description": "Это фреймворк, который построен на модуля питона asyncio и aiohttp, для создания телеграм ботов. Полностью ассинхронный.", "description_ru": "Это фреймворк, который построен на модуля питона asyncio и aiohttp, для создания телеграм ботов. Полностью ассинхронный.", "description_en": "It is a framework that build upon asyncio and aiohttp python modules, fully asynchronous, for creating telegram bots.", "definition": "Это фреймворк, который построен на модуля питона *asyncio* и *aiohttp*, для создания телеграм ботов. Полностью *ассинхронный*.", "definition_ru": "Это фреймворк, который построен на модуля питона *asyncio* и *aiohttp*, для создания телеграм ботов. Полностью *ассинхронный*.", "definition_en": "It is a **framework** that build upon *asyncio* and *aiohttp* python modules, fully *asynchronous*, for creating telegram bots.", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 21, "fields": {"termin": "VPS (Виртуальный частный сервер)", "termin_ru": "VPS (Виртуальный частный сервер)", "termin_en": "VPS (Virtula private server)", "description": "Это услуга суть которой заключается в том что предоставляется доступ к выделеному серверу на определённой машине. Таких выделенных серверов на одной машине может быть тысячи.", "description_ru": "Это услуга суть которой заключается в том что предоставляется доступ к выделеному серверу на определённой машине. Таких выделенных серверов на одной машине может быть тысячи.", "description_en": "This is a service whose essence is that access to a dedicated server on a specific machine is provided. There can be thousands of such dedicated servers on one machine.", "definition": "Это услуга суть которой заключается в том что предоставляется доступ к выделеному серверу на определённой машине. Таких выделенных серверов на одной машине может быть тысячи.\r\n{: .text }\r\n\r\nОбычно управление таким сервером не отличается от управления обычным, физическим.\r\n{: .text }", "definition_ru": "Это услуга суть которой заключается в том что предоставляется доступ к выделеному серверу на определённой машине. Таких выделенных серверов на одной машине может быть тысячи.\r\n{: .text }\r\n\r\nОбычно управление таким сервером не отличается от управления обычным, физическим.\r\n{: .text }", "definition_en": "This is a service whose essence is that access to a dedicated server on a specific machine is provided. There can be thousands of such dedicated servers on one machine.\r\n{: .text }\r\n\r\nTypically, managing such a server is no different from managing a regular, physical one.\r\n{: .text }", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 22, "fields": {"termin": "Пагинация", "termin_ru": "Пагинация", "termin_en": "Pagination", "description": "Это паттерн дизайна сайтов, который подразумевает разделение контента сайта на отдельные страницы.", "description_ru": "Это паттерн дизайна сайтов, который подразумевает разделение контента сайта на отдельные страницы.", "description_en": "Is the design pattern, which divide content on the website into smaller pieces (pages)", "definition": "Это паттерн дизайна сайтов, который подразумевает разделение контента сайта на отдельные страницы.", "definition_ru": "Это паттерн дизайна сайтов, который подразумевает разделение контента сайта на отдельные страницы.", "definition_en": "Is the design pattern, which divide content on the website into smaller pieces (pages)", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 23, "fields": {"termin": "Конструктор сайтов", "termin_ru": "Конструктор сайтов", "termin_en": "Website builder", "description": "Это приложение или веб сервис, с набором готовых решений и шаблонов, для создания сайтов.", "description_ru": "Это приложение или веб сервис, с набором готовых решений и шаблонов, для создания сайтов.", "description_en": "It is an app or web service, with a collection of ready for use templates and tools, for constructing a website.", "definition": "Это приложение или веб сервис, с набором готовых решений и шаблонов, для создания сайтов.", "definition_ru": "Это приложение или веб сервис, с набором готовых решений и шаблонов, для создания сайтов.", "definition_en": "It is an app or web service, with a collection of ready for use templates and tools, for constructing a website.", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 24, "fields": {"termin": "Django шаблон", "termin_ru": "Django шаблон", "termin_en": "Django template", "description": "Это текстовый документ, который размечен специальным ситнаксисом для вставки кода в него.", "description_ru": "Это текстовый документ, который размечен специальным ситнаксисом для вставки кода в него.", "description_en": "This is a text document marked up with a special syntax for inserting new code.", "definition": "Это текстовый документ, который размечен специальным ситнаксисом для вставки кода в него.", "definition_ru": "Это текстовый документ, который размечен специальным ситнаксисом для вставки кода в него.", "definition_en": "This is a text document marked up with a special syntax for inserting new code.", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 25, "fields": {"termin": "Комментарий", "termin_ru": "Комментарий", "termin_en": "Comment", "description": "Это оставленное пользователем сообщение на сайте.", "description_ru": "Это оставленное пользователем сообщение на сайте.", "description_en": "A message left by a user on a website.", "definition": "Это оставленное пользователем сообщение на сайте.", "definition_ru": "Это оставленное пользователем сообщение на сайте.", "definition_en": "A message left by a user on a website.", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 26, "fields": {"termin": "Django модель", "termin_ru": "Django модель", "termin_en": "Django model", "description": "Это менеджер баз данных во фреймворке Django. Реализованно в виде класов и наследования в Python", "description_ru": "Это менеджер баз данных во фреймворке Django. Реализованно в виде класов и наследования в Python", "description_en": "Is a database manager used in the Django framework. Implemented via classes and inheritance in python.", "definition": "Это менеджер баз данных во фреймворке Django. Реализованно в виде класов и наследования в Python", "definition_ru": "Это менеджер баз данных во фреймворке Django. Реализованно в виде класов и наследования в Python", "definition_en": "Is a database manager used in the Django framework. Implemented via classes and inheritance in python.", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.td", "pk": 27, "fields": {"termin": "Аутентификация", "termin_ru": "Аутентификация", "termin_en": "Authentication", "description": "Это процесс, организованный на сайте, который проверяет, является ли пользователь тем кем он себя представляет серверу.", "description_ru": "Это процесс, организованный на сайте, который проверяет, является ли пользователь тем кем он себя представляет серверу.", "description_en": "Is a process implemented on a website that checks if requested data can be sent to the source of the request. (By source, I mean user.)", "definition": "Это процесс, организованный на сайте, который проверяет, является ли пользователь тем кем он себя представляет серверу.", "definition_ru": "Это процесс, организованный на сайте, который проверяет, является ли пользователь тем кем он себя представляет серверу.", "definition_en": "Is a process implemented on a website that checks if requested data can be sent to the source of the request. (By source, I mean user.)", "template": "/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html"}}, {"model": "Post.tool", "pk": 11, "fields": {"name": "ВорКартинок", "name_ru": "ВорКартинок", "name_en": "ImageThief", "description": "Инструмент для сбора всех картинок со всего сайта, или списка страниц, или одной конкретной страницы. С возможностью использовать данный инструмент как python скрипт, на собственной машине. Как django приложение. И как обычный веб инструмент, который всегда доступен.", "description_ru": "Инструмент для сбора всех картинок со всего сайта, или списка страниц, или одной конкретной страницы. С возможностью использовать данный инструмент как python скрипт, на собственной машине. Как django приложение. И как обычный веб инструмент, который всегда доступен.", "description_en": "A tool for collecting all images from a whole website is either a list of pages or one single page.With the option to use this tool as a Python script on your own computer, Using this tool as a Django app. And, for sure, as a usual online tool, which will always be accessible for you.", "icon": "tools/image_thief/hat_and_face_all_in_black.svg"}}]