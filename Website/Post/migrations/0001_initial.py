# Generated by Django 4.2.6 on 2023-12-20 15:11

import Post.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('name_ru', models.CharField(max_length=50, null=True, unique=True)),
                ('name_en', models.CharField(max_length=50, null=True, unique=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('slug', models.SlugField(unique=True)),
                ('template', models.FilePathField(default='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/post_list.html', path='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=256, unique=True)),
                ('timeCreated', models.DateTimeField()),
                ('timeUpdated', models.DateTimeField(auto_now=True)),
                ('isPublished', models.BooleanField(default=True)),
                ('likes', models.IntegerField(default=0)),
                ('shares', models.IntegerField(default=0)),
                ('viewed', models.IntegerField(default=0)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.category')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('title', models.CharField(max_length=256)),
                ('title_ru', models.CharField(max_length=256, null=True)),
                ('title_en', models.CharField(max_length=256, null=True)),
                ('description', models.TextField(blank=True)),
                ('description_ru', models.TextField(blank=True, null=True)),
                ('description_en', models.TextField(blank=True, null=True)),
                ('preview', models.ImageField(blank=True, max_length=300, upload_to=Post.models.user_directory_path)),
                ('template', models.FileField(max_length=300, upload_to=Post.models.user_directory_path)),
                ('template_ru', models.FileField(max_length=300, null=True, upload_to=Post.models.user_directory_path)),
                ('template_en', models.FileField(max_length=300, null=True, upload_to=Post.models.user_directory_path)),
            ],
            bases=('Post.post',),
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('title', models.CharField(max_length=256)),
                ('title_ru', models.CharField(max_length=256, null=True)),
                ('title_en', models.CharField(max_length=256, null=True)),
                ('subtitle', models.CharField(max_length=256)),
                ('subtitle_ru', models.CharField(max_length=256, null=True)),
                ('subtitle_en', models.CharField(max_length=256, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('resume', models.TextField(help_text='Render markdown')),
                ('resume_ru', models.TextField(help_text='Render markdown', null=True)),
                ('resume_en', models.TextField(help_text='Render markdown', null=True)),
                ('client_name', models.CharField(blank=True, max_length=256)),
                ('client_name_ru', models.CharField(blank=True, max_length=256, null=True)),
                ('client_name_en', models.CharField(blank=True, max_length=256, null=True)),
                ('client_description', models.TextField(blank=True, help_text='Render markdown')),
                ('client_description_ru', models.TextField(blank=True, help_text='Render markdown', null=True)),
                ('client_description_en', models.TextField(blank=True, help_text='Render markdown', null=True)),
                ('goals', models.TextField(help_text='Render markdown')),
                ('goals_ru', models.TextField(help_text='Render markdown', null=True)),
                ('goals_en', models.TextField(help_text='Render markdown', null=True)),
                ('solution', models.TextField(help_text='Render markdown')),
                ('solution_ru', models.TextField(help_text='Render markdown', null=True)),
                ('solution_en', models.TextField(help_text='Render markdown', null=True)),
                ('result', models.TextField(help_text='Render markdown')),
                ('result_ru', models.TextField(help_text='Render markdown', null=True)),
                ('result_en', models.TextField(help_text='Render markdown', null=True)),
                ('preview', models.ImageField(blank=True, max_length=300, upload_to=Post.models.user_directory_path)),
                ('additional', models.TextField(blank=True, help_text='Render markdown')),
                ('additional_ru', models.TextField(blank=True, help_text='Render markdown', null=True)),
                ('additional_en', models.TextField(blank=True, help_text='Render markdown', null=True)),
                ('template', models.FilePathField(default='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/case.html', path='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post')),
            ],
            bases=('Post.post',),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('headline', models.CharField(max_length=256)),
                ('headline_ru', models.CharField(max_length=256, null=True)),
                ('headline_en', models.CharField(max_length=256, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('first_sentence', models.CharField(max_length=256)),
                ('first_sentence_ru', models.CharField(max_length=256, null=True)),
                ('first_sentence_en', models.CharField(max_length=256, null=True)),
                ('lead', models.TextField(help_text='Render markdown')),
                ('lead_ru', models.TextField(help_text='Render markdown', null=True)),
                ('lead_en', models.TextField(help_text='Render markdown', null=True)),
                ('body', models.TextField(help_text='Render markdown')),
                ('body_ru', models.TextField(help_text='Render markdown', null=True)),
                ('body_en', models.TextField(help_text='Render markdown', null=True)),
                ('ending', models.TextField(help_text='Render markdown')),
                ('ending_ru', models.TextField(help_text='Render markdown', null=True)),
                ('ending_en', models.TextField(help_text='Render markdown', null=True)),
                ('preview', models.ImageField(blank=True, max_length=300, upload_to=Post.models.user_directory_path)),
                ('template', models.FilePathField(default='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/news.html', path='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post')),
            ],
            bases=('Post.post',),
        ),
        migrations.CreateModel(
            name='QA',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('question', models.CharField(max_length=512)),
                ('question_ru', models.CharField(max_length=512, null=True)),
                ('question_en', models.CharField(max_length=512, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('answer', models.TextField(help_text='Render markdown')),
                ('answer_ru', models.TextField(help_text='Render markdown', null=True)),
                ('answer_en', models.TextField(help_text='Render markdown', null=True)),
                ('template', models.FilePathField(default='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/qa.html', path='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post')),
            ],
            bases=('Post.post',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('name', models.CharField(max_length=256)),
                ('name_ru', models.CharField(max_length=256, null=True)),
                ('name_en', models.CharField(max_length=256, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('preview', models.ImageField(blank=True, max_length=300, upload_to=Post.models.user_directory_path)),
                ('price', models.FloatField(default=0, help_text='In USD')),
                ('deadline', models.CharField(max_length=64)),
                ('deadline_ru', models.CharField(max_length=64, null=True)),
                ('deadline_en', models.CharField(max_length=64, null=True)),
                ('process', models.TextField(help_text='Render markdown.')),
                ('process_ru', models.TextField(help_text='Render markdown.', null=True)),
                ('process_en', models.TextField(help_text='Render markdown.', null=True)),
                ('for_who', models.TextField(help_text='Render markdown.')),
                ('for_who_ru', models.TextField(help_text='Render markdown.', null=True)),
                ('for_who_en', models.TextField(help_text='Render markdown.', null=True)),
                ('for_who_not', models.TextField(help_text='Render markdown.')),
                ('for_who_not_ru', models.TextField(help_text='Render markdown.', null=True)),
                ('for_who_not_en', models.TextField(help_text='Render markdown.', null=True)),
                ('benefits', models.TextField(help_text='Render markdown.')),
                ('benefits_ru', models.TextField(help_text='Render markdown.', null=True)),
                ('benefits_en', models.TextField(help_text='Render markdown.', null=True)),
                ('template', models.FilePathField(default='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/service.html', path='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post')),
            ],
            bases=('Post.post',),
        ),
        migrations.CreateModel(
            name='TD',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('termin', models.CharField(max_length=128)),
                ('termin_ru', models.CharField(max_length=128, null=True)),
                ('termin_en', models.CharField(max_length=128, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('definition', models.TextField(help_text='Render markdown')),
                ('definition_ru', models.TextField(help_text='Render markdown', null=True)),
                ('definition_en', models.TextField(help_text='Render markdown', null=True)),
                ('template', models.FilePathField(default='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post/td.html', path='/home/dima/Projects/Web/TimTheWebmaster/MyBlog/Post/templates/Post')),
            ],
            bases=('Post.post',),
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('post_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Post.post')),
                ('name', models.CharField(max_length=256)),
                ('name_ru', models.CharField(max_length=256, null=True)),
                ('name_en', models.CharField(max_length=256, null=True)),
                ('description', models.TextField()),
                ('description_ru', models.TextField(null=True)),
                ('description_en', models.TextField(null=True)),
                ('icon', models.FileField(blank=True, max_length=300, upload_to=Post.models.user_directory_path)),
            ],
            bases=('Post.post',),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, to='Post.tag'),
        ),
    ]
