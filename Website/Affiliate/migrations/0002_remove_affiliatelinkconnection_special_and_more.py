# Generated by Django 5.1 on 2025-09-17 12:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('Affiliate', '0001_initial'),
        ('Post', '0045_price_barter_price_en_price_barter_price_ru'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='affiliatelinkconnection',
            name='special',
        ),
        migrations.RemoveField(
            model_name='affiliatelinkconnection',
            name='tags',
        ),
        migrations.RemoveField(
            model_name='affiliatelinkconnection',
            name='slug',
        ),
        migrations.CreateModel(
            name='AffiliateLinkConnectionSlug',
            fields=[
                ('affiliatelinkconnection_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Affiliate.affiliatelinkconnection')),
                ('slugs', models.ManyToManyField(to='Post.post')),
            ],
            bases=('Affiliate.affiliatelinkconnection',),
        ),
        migrations.CreateModel(
            name='AffiliateLinkConnectionSpecial',
            fields=[
                ('affiliatelinkconnection_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Affiliate.affiliatelinkconnection')),
                ('special', models.CharField(choices=[('None', 'None'), ('Home page', 'Home'), ('About page', 'Abot')], default='None', max_length=50)),
            ],
            bases=('Affiliate.affiliatelinkconnection',),
        ),
        migrations.CreateModel(
            name='AffiliateLinkConnectionTag',
            fields=[
                ('affiliatelinkconnection_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='Affiliate.affiliatelinkconnection')),
                ('tags', models.ManyToManyField(to='Post.tag')),
            ],
            bases=('Affiliate.affiliatelinkconnection',),
        ),
    ]
